@using Esfa.Recruit.Provider.Web.RouteModel;
@model VacanciesViewModel
@{
    ViewBag.GaData.Vpv = "/recruitment/provider/page-vacancies";
    ViewBag.Title = "Vacancies";

    var vacancyRouteModel = new VacancyRouteModel {Ukprn = Model.Ukprn};
    var vacanciesSearchSuggestionsEndpointUrl = @Url.RouteUrl(RouteNames.VacanciesSearchSuggestions_Get, vacancyRouteModel.RouteDictionary, Context.Request.Scheme);
    string GetLinkText(VacancySummaryViewModel vacancySummary)
    {
        switch (vacancySummary.Status)
        {
            case VacancyStatus.Referred:
            case VacancyStatus.Rejected:
                return "Edit and resubmit";
            case VacancyStatus.Draft:
                return "Edit and submit";
        }
        return "Manage";
    }
}

<partial name="@PartialNames.Alerts" for="Alerts" />

<div asp-show="Model.HasWarning" class="das-notification das-notification--warning">
    <p class="das-notification__body">@Model.WarningMessage</p>
</div>


<div asp-show="Model.HasInfo" class="govuk-notification-banner govuk-notification-banner--success" role="alert" aria-labelledby="govuk-notification-banner-title" data-module="govuk-notification-banner">
  <div class="govuk-notification-banner__header">
    <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
      Success
    </h2>
  </div>
  <div class="govuk-notification-banner__content">
    <h3 class="govuk-notification-banner__heading">
        @Model.InfoMessage        
    </h3>
  </div>
</div>

@section BackLink
{
    <a asp-route="@RouteNames.Dashboard_Get" asp-route-ukprn="@Model.Ukprn" esfa-automation="link-back" class="govuk-back-link">Return to your dashboard</a>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-half">
        <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">Your vacancies</h1>
    </div>
    <div class="govuk-grid-column-one-half">
        <a asp-route="@RouteNames.CreateVacancyStart" asp-route-ukprn="@Model.Ukprn" class="govuk-button das-float-right govuk-!-margin-bottom-6" esfa-automation="create-vacancy">Create a vacancy</a>
    </div>
</div>

<form method="get" autocomplete="off" asp-route-ukprn="@Model.Ukprn">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-third">
            <div class="govuk-form-group">
                <label asp-for="Filter" class="govuk-label">Filter vacancies by</label>
                <select asp-for="Filter" class="govuk-select">
                    <optgroup label="Status">
                        <option value="@FilteringOptions.All">all vacancies</option>
                        <option value="@FilteringOptions.Live">live vacancies</option>
                        <option value="@FilteringOptions.Referred">rejected vacancies</option>
                        @if (Model.HasEmployerReviewPermission)
                        {
                            <option value="@FilteringOptions.Review">pending employer review</option>   
                        }
                        <option value="@FilteringOptions.Submitted">vacancies pending DfE review</option>
                        <option value="@FilteringOptions.Draft">draft vacancies</option>
                        <option value="@FilteringOptions.Closed">closed vacancies</option>
                    </optgroup>
                    <optgroup label="Other">
                        <option value="@FilteringOptions.NewApplications">with new applications</option>
                        <option value="@FilteringOptions.AllApplications">with applications</option>
                        <option value="@FilteringOptions.ClosingSoonWithNoApplications">closing soon with no applications</option>
                        <option value="@FilteringOptions.ClosingSoon">closing soon</option>
                        <option value="@FilteringOptions.EmployerReviewedApplications">with employer-reviewed applications</option>
                    </optgroup>
                </select>
                <button type="submit" id="filter-submit" class="das-button-filter das-button-secondary govuk-button govuk-!-margin-top-3">Filter</button>
            </div>
        </div>
        <div class="govuk-grid-column-two-thirds">
            <div class="govuk-form-group">
                <label for="search-input" class="govuk-label">
                    Search by vacancy title, reference number or employer
                </label>
                <div class="das-search-form__group">
                    <input id="search-input" asp-for="SearchTerm" title="Search" class="govuk-input das-search-form__input app-vacancy-autocomplete" type="text" maxlength="200" data-apiurl="@vacanciesSearchSuggestionsEndpointUrl">
                    <div class="das-search-form__button-wrap">
                        <button class="govuk-button das-search-form__button" type="submit">
                            Search
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<h3 class="govuk-heading-m">
    @Model.ResultsHeading <a asp-show="@Model.IsFiltered" asp-route="@RouteNames.Vacancies_Get" asp-route-ukprn="@Model.Ukprn" asp-route-filter="All" class="govuk-!-font-weight-regular govuk-link govuk-link--no-visited-state govuk-!-margin-left-1 govuk-!-font-size-19">Show all vacancies</a>
</h3>

<p asp-hide="@Model.ShowResultsTable" class="govuk-body">No vacancies match the criteria</p>

<div asp-show="@Model.ShowResultsTable">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <table class="govuk-table das-table--condensed das-table--responsive">
                <caption class="govuk-visually-hidden">Your draft vacancies</caption>
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="col">Vacancy title</th>
                        <th class="govuk-table__header" scope="col">Employer</th>
                        <th class="govuk-table__header" scope="col">Vacancy reference number</th>
                        <th class="govuk-table__header" scope="col">Applications</th>
                        <th class="govuk-table__header" scope="col">Closing date</th>
                        <th class="govuk-table__header" scope="col">Status</th>
                        <th class="govuk-table__header govuk-table__header--numeric govuk-!-padding-right-0" scope="col">Action</th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    @foreach (var vacancy in Model.Vacancies)
                    {
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell" data-label="Vacancy title">
                            <div>@vacancy.Title</div>
                        </td>
                        <td class="govuk-table__cell" data-label="Employer">
                            <span>@vacancy.EmployerName</span>
                        </td>
                        <td class="govuk-table__cell" data-label="Vacancy reference number">
                            <span asp-show="@vacancy.HasVacancyReference"><span>VAC</span>@vacancy.VacancyReference</span>
                        </td>
                        <td asp-show="@vacancy.CanShowVacancyApplicationsCount" class="govuk-table__cell" data-label="Applications">
                            <div asp-show="@Model.ShowNewApplicationCounts">
                                <span asp-show="@vacancy.HasNoApplications">0</span>
                                <span asp-show="@vacancy.HasApplications">@vacancy.NoOfApplications</span>
                                <span asp-show="@vacancy.HasNewApplications" class="govuk-!-font-weight-bold">(@vacancy.NoOfNewApplications new)</span>
                            </div>
                            <div asp-show="@Model.ShowEmployerReviewedApplicationCounts">
                                <span asp-show="@vacancy.HasEmployerReviewedApplications">@vacancy.NoOfEmployerReviewedApplications reviewed</span>
                            </div>
                        </td>
                        <td asp-hide="@vacancy.CanShowVacancyApplicationsCount" class="govuk-table__cell" data-label="Applications">-</td>
                        <td class="govuk-table__cell" data-label="Closing date"><span>@vacancy.ClosingDate?.AsGdsDate()</span></td>
                        <td class="govuk-table__cell" data-label="Status">
                            <span class="govuk-tag app-tag app-tag--@vacancy.Status.ToString().ToLower()">@vacancy.Status.GetDisplayName(UserType.Provider)</span>
                        </td>
                        <td class="govuk-table__cell govuk-table__cell--numeric" data-label="Action">
                            <a id="manage-@vacancy.Id" asp-show="@vacancy.IsNotSubmittable" asp-route="@RouteNames.VacancyManage_Get" asp-route-ukprn="@Model.Ukprn" asp-route-vacancyId="@vacancy.Id" class="govuk-link">@GetLinkText(vacancy) <span class="govuk-visually-hidden">@vacancy.Title</span></a>
                            @if (vacancy.Status is VacancyStatus.Referred or VacancyStatus.Rejected)
                            {
                                <a id="task-list-@vacancy.Id" asp-show="@vacancy.IsSubmittable" asp-route="@RouteNames.ProviderCheckYourAnswersGet" asp-route-ukprn="@Model.Ukprn" asp-route-vacancyId="@vacancy.Id" class="govuk-link">@GetLinkText(vacancy) <span class="govuk-visually-hidden">@vacancy.Title</span></a> 
                            }
                            else if(vacancy.Status == VacancyStatus.Draft && vacancy.IsTaskListCompleted)
                            {
                                <a id="task-list-@vacancy.Id" asp-show="@vacancy.IsSubmittable" asp-route="@RouteNames.ProviderCheckYourAnswersGet" asp-route-ukprn="@Model.Ukprn" asp-route-vacancyId="@vacancy.Id" class="govuk-link">@GetLinkText(vacancy) <span class="govuk-visually-hidden">@vacancy.Title</span></a> 
                            }
                            else
                            {
                                <a id="task-list-@vacancy.Id" asp-show="@vacancy.IsSubmittable" asp-route="@RouteNames.ProviderTaskListGet" asp-route-ukprn="@Model.Ukprn" asp-route-vacancyId="@vacancy.Id" class="govuk-link">@GetLinkText(vacancy) <span class="govuk-visually-hidden">@vacancy.Title</span></a>
                            }
                        </td>
                    </tr>
                    }
                </tbody>
            </table>

             <nav role="navigation" aria-label="Pagination" asp-show="@Model.Pager.ShowPager" >
                <div class="das-pagination__summary">
                    @Model.Pager.Caption
                </div>
                <ul class="das-pagination">
                    <li class="das-pagination__item" asp-show="@Model.Pager.ShowPrevious">
                    <a class="das-pagination__link" asp-route="@Model.Pager.RouteName" asp-all-route-data="@Model.Pager.PreviousPageRouteData" aria-label="Previous page">Previous</a>
                    </li>
                    @for (var pageIndex = 1; pageIndex <= Model.Pager.TotalPages; pageIndex++)
                    {
                        <li class="das-pagination__item">
                            @if (pageIndex == Model.Pager.CurrentPage) {
                                <a class="das-pagination__link current" asp-route="@Model.Pager.RouteName" asp-all-route-data="@Model.Pager.GetRouteData(pageIndex)" aria-current="true" aria-label="Page @pageIndex, current page">@pageIndex</a>
                            } 
                            else 
                            {
                                <a class="das-pagination__link asp-route="  asp-route="@Model.Pager.RouteName" asp-all-route-data="@Model.Pager.GetRouteData(pageIndex)" aria-label="Page @pageIndex">@pageIndex</a>
                            }
                        </li>
                    }
                    <li class="das-pagination__item" asp-show="@Model.Pager.ShowNext">
                    <a class="das-pagination__link"  asp-route="@Model.Pager.RouteName" asp-all-route-data="@Model.Pager.NextPageRouteData" aria-label="Next page">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section FooterJS
{
    <script nws-csp-add-nonce="true">
        var filterId = "#@Html.IdFor(m => m.Filter)";
        $(function() {
            $("#search-submit-button").removeClass('js-hidden');
            $("#filter-submit").addClass('js-hidden');
            $(filterId).on("change",
                function() {
                var $filterForm = $(this).parents("form");
                    $filterForm.areYouSure({ 'silent': true });
                    $filterForm.submit();
            });
        });
    </script>
}
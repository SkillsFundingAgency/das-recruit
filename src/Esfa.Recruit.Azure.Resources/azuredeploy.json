{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "EnvironmentName": {
      "type": "string"
    },
    "AppServicePlanTier": {
      "type": "string",
      "defaultValue": "Free",
      "allowedValues": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "AppServicePlanSkuLevel": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "1",
        "2",
        "3"
      ]
    },
    "Authentication": {
      "type": "object",
      "defaultValue": {
        "Authority": "",
        "MetaDataAddress": "",
        "ClientId": "",
        "ClientSecret": ""
      }
    },
    "AccountApiConfiguration": {
      "type": "object",
      "defaultValue": {
        "ApiBaseUrl": "",
        "ClientId": "",
        "ClientSecret": "",
        "IdentifierUri": "",
        "Tenant": ""
      }
    },
    "ExternalLinks": {
      "type": "object",
      "defaultValue": {
        "ManageApprenticeshipSiteUrl": "",
        "EmployerIdamsSiteUrl": ""
      }
    },
    "LoggingRedisConnectionString": {
      "type": "securestring",
      "defaultValue": ""
    }
  },
  "variables": {
    "AppServicePlanName": "[concat('das-', toLower(parameters('EnvironmentName')), '-rcrt-asp')]",
    "EmployerRecruitAppServiceName": "[concat('das-', toLower(parameters('EnvironmentName')), '-rcrt-as')]",
    "CosmosDbName": "[concat('das-', toLower(parameters('EnvironmentName')),'-rcrt-cdb')]",
    "AppInsightsName": "[concat('das-', toLower(parameters('EnvironmentName')),'-rcrt-ai')]"
  },
  "resources": [
    {
      "name": "[variables('AppServicePlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {},
      "sku": {
        "tier": "[parameters('AppServicePlanTier')]",
        "name": "[concat(substring(parameters('AppServicePlanTier'),0,1), parameters('AppServicePlanSkuLevel'))]"
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('AppInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "name": "[variables('CosmosDbName')]",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2015-04-08",
      "location": "[resourceGroup().location]",
      "tags": {},
      "kind": "MongoDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "databaseAccountOfferType": "Standard"
      }
    },
    {
      "name": "[variables('EmployerRecruitAppServiceName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('AppServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "Authentication:Authority",
              "value": "[parameters('Authentication').Authority]"
            },
            {
              "name": "Authentication:MetaDataAddress",
              "value": "[parameters('Authentication').MetaDataAddress]"
            },
            {
              "name": "Authentication:ClientId",
              "value": "[parameters('Authentication').ClientId]"
            },
            {
              "name": "Authentication:ClientSecret",
              "value": "[parameters('Authentication').ClientSecret]"
            },
            {
              "name": "AccountApiConfiguration:ApiBaseUrl",
              "value": "[parameters('AccountApiConfiguration').ApiBaseUrl]"
            },
            {
              "name": "AccountApiConfiguration:ClientId",
              "value": "[parameters('AccountApiConfiguration').ClientId]"
            },
            {
              "name": "AccountApiConfiguration:ClientSecret",
              "value": "[parameters('AccountApiConfiguration').ClientSecret]"
            },
            {
              "name": "AccountApiConfiguration:IdentifierUri",
              "value": "[parameters('AccountApiConfiguration').IdentifierUri]"
            },
            {
              "name": "AccountApiConfiguration:Tenant",
              "value": "[parameters('AccountApiConfiguration').Tenant]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(concat('microsoft.insights/components/', variables('AppInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "ExternalLinks:ManageApprenticeshipSiteUrl",
              "value": "[parameters('ExternalLinks').ManageApprenticeshipSiteUrl]"
            },
            {
              "name": "ExternalLinks:EmployerIdamsSiteUrl",
              "value": "[parameters('ExternalLinks').EmployerIdamsSiteUrl]"
            },
            {
              "name": "Environment",
              "value": "[toUpper(parameters('EnvironmentName'))]"
            }
          ],
          "connectionStrings": [
            {
              "name": "Redis",
              "connectionString": "[parameters('LoggingRedisConnectionString')]",
              "type": "Custom"
            },
            {
              "name": "MongoDb",
              "connectionString": "[concat('mongodb://', variables('CosmosDbName'), ':', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('CosmosDbName')), '2015-11-06').primaryMasterKey,'@', variables('CosmosDbName'), '.documents.azure.com:10255/?ssl=true&replicaSet=globaldb')]",
              "type": "Custom"
            }
          ],
          "alwaysOn": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('AppServicePlanName'))]",
        "[resourceId('microsoft.insights/components', variables('AppInsightsName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('CosmosDbName'))]"
      ]
    }
  ],
  "outputs": {}
}

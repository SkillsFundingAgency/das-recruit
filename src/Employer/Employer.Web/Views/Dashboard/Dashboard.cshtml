@using Esfa.Recruit.Vacancies.Client.Domain.Entities
@using Esfa.Recruit.Vacancies.Client.Infrastructure.QueryStore.Projections.Employer
@model DashboardViewModel

@{
    string GetLinkText(VacancySummary vacancySummary)
    {
        switch (vacancySummary.Status)
        {
            case VacancyStatus.Referred:
                return "Edit and resubmit";
            case VacancyStatus.Draft:
                return "Edit and submit";
        }

        return "View";
    }
}
<div class="grid-row dashboard-header">
    <div class="column-two-thirds">
        <h1 class="heading-large small-bottom-margin">Your vacancies</h1>
        <div asp-condition="Model.HasWarning" class="warning-summary no-bottom-margin">
            <p>@Model.WarningMessage</p>
        </div>
        <div asp-condition="Model.HasInfo" class="info-summary no-bottom-margin">
            <p>@Model.InfoMessage</p>
        </div>
    </div>
</div>
<div class="grid-row">
    <div class="column-full">
        <div asp-condition="@Model.ShowNoVacanciesMessage">
            <p>
                You can clone or copy vacancies once they've been submitted.
            </p> 
            <p>
                Vacancies will be approved or rejected within 24 hours.
            </p>
        </div>
        <a asp-condition="!@Model.CanCloneVacancies" asp-route="@RouteNames.CreateVacancy_Get" class="button small-bottom-margin">Create vacancy</a>
        <a asp-condition="@Model.CanCloneVacancies" asp-route="@RouteNames.CreateVacancyOptions_Get" class="button small-bottom-margin">Create vacancy</a>
    </div>
    <br>
</div>

<div asp-condition="@Model.HasVacancies">
    <div class="grid-row">
        <div class="column-full">
            <table id="dashboard-table">
                <thead>
                    <tr>
                        <th class="bold">Status</th>
                        <th class="bold">Vacancy title</th>
                        <th class="bold">Vacancy ref</th>
                        <th class="bold">Closing Date</th>
                        <th class="bold">Action</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var vacancy in Model.Vacancies)
                {
                    <tr>
                        <td>@vacancy.Status.GetDisplayName()</td>
                        <td>
                            <div>@vacancy.Title</div>
                            <div asp-condition="@vacancy.IsApplicationsVacancy">
                                <span asp-condition="@vacancy.HasApplications">
                                    <a asp-route="@RouteNames.DisplayVacancy_Get" asp-route-vacancyId="@vacancy.Id">
                                        @vacancy.AllApplicationsCount applications
                                    </a>&nbsp;(@vacancy.NewApplicationsCount new)
                                </span>
                                <span asp-condition="@vacancy.HasNoApplications">@vacancy.AllApplicationsCount applications (@vacancy.NewApplicationsCount new)</span>
                            </div>
                        </td>
                        <td>
                            <span asp-condition="@vacancy.HasVacancyReference"><span>VAC</span>@vacancy.VacancyReference</span>
                            <span asp-condition="@vacancy.HasNoVacancyReference">Not available</span>
                        </td>
                        <td class="dashboard-closingdate">@vacancy.ClosingDate?.AsGdsDate()</td>
                        <td class="dashboard-action">
                            <a asp-condition="@vacancy.IsLive" asp-route="@RouteNames.VacancyManage_Get" asp-route-vacancyId="@vacancy.Id">@GetLinkText(vacancy)</a>
                            <a asp-condition="@vacancy.IsNotLive" asp-route="@RouteNames.DisplayVacancy_Get" asp-route-vacancyId="@vacancy.Id" asp-route-showApplications="false">@GetLinkText(vacancy)</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

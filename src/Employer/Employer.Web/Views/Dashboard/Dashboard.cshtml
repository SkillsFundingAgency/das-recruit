@using Esfa.Recruit.Vacancies.Client.Domain.Entities
@using Esfa.Recruit.Vacancies.Client.Infrastructure.QueryStore.Projections.Employer
@model DashboardViewModel

@{
    string GetLinkText(VacancySummary vacancySummary)
    {
        switch (vacancySummary.Status)
        {
            case VacancyStatus.Referred:
                return "Edit and resubmit";
            case VacancyStatus.Draft:
                return "Edit and submit";
        }

        return "Manage";
    }
}
<div class="grid-row dashboard-header">
    <div class="column-two-thirds">
        <h1 class="heading-large small-bottom-margin">Your vacancies</h1>
        <div asp-show="Model.HasWarning" class="warning-summary no-bottom-margin">
            <p>@Model.WarningMessage</p>
        </div>
        <div asp-show="Model.HasInfo" class="info-summary no-bottom-margin">
            <p>@Model.InfoMessage</p>
        </div>
    </div>
</div>
<div class="grid-row">
    <div class="column-full">
        <p>
            You must be a levy-paying employer to post a vacancy.
        </p>
        <p>
            You can clone vacancies once they've been submitted.
            Vacancies will be approved or rejected within 24 hours.
        </p>
        <a asp-show="@Model.CannotCloneVacancies" asp-route="@RouteNames.CreateVacancy_Get" class="button small-bottom-margin">Create vacancy</a>
        <a asp-show="@Model.CanCloneVacancies" asp-route="@RouteNames.CreateVacancyOptions_Get" class="button small-bottom-margin">Create vacancy</a>
    </div>
    <br>
</div>

<div asp-show="@Model.HasVacancies">
    <div class="grid-row">
        <div class="column-full">
            <table id="dashboard-table">
                <thead>
                    <tr>
                        <th class="bold">Status</th>
                        <th class="bold">Vacancy title</th>
                        <th class="bold">Vacancy ref</th>
                        <th class="bold">Closing Date</th>
                        <th class="bold">Action</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var vacancy in Model.Vacancies)
                {
                    <tr>
                        <td><span class="tag tag-@vacancy.Status.ToString().ToLower()">@vacancy.Status.GetDisplayName()</span></td>
                        <td>
                            <div>@vacancy.Title</div>
                            <div asp-show="@vacancy.IsApplicationsVacancy">
                                <span asp-show="@vacancy.HasNoApplications" class="bold">@vacancy.AllApplicationsCount applications</span>
                                <span asp-show="@vacancy.HasApplications">@vacancy.AllApplicationsCount applications</span>
                                <span asp-show="@vacancy.HasNewApplications" class="bold"> (@vacancy.NewApplicationsCount new)</span>
                            </div>
                        </td>
                        <td>
                            <span asp-show="@vacancy.HasVacancyReference"><span>VAC</span>@vacancy.VacancyReference</span>
                            <span asp-show="@vacancy.HasNoVacancyReference">Not available</span>
                        </td>
                        <td class="dashboard-closingdate">@vacancy.ClosingDate?.AsGdsDate()</td>
                        <td class="dashboard-action">
                            <a asp-show="@vacancy.IsNotSubmittable" asp-route="@RouteNames.VacancyManage_Get" asp-route-vacancyId="@vacancy.Id">Manage</a>
                            <a asp-show="@vacancy.IsSubmittable" asp-route="@RouteNames.DisplayVacancy_Get" asp-route-vacancyId="@vacancy.Id">@GetLinkText(vacancy)</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

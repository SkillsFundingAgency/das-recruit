@using Esfa.Recruit.Shared.Web.Mappers
@using Microsoft.Extensions.Options
@model Esfa.Recruit.Employer.Web.ViewModels.Part1.Training.TrainingViewModel
@inject IOptions<ExternalLinksConfiguration> externalLinks;
@{ 
    ViewBag.Vpv = "/recruitment/employer/page-training";
    ViewBag.ZenDeskLabel = "recruit-what-training-will-the-apprentice-take";
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <a asp-show="@Model.PageInfo.IsWizard" asp-route="@RouteNames.Title_Get" esfa-automation="link-back" class="govuk-back-link govuk-!-margin-top-0 govuk-!-margin-bottom-6">Back</a>
        <partial name="@PartialNames.ValidationSummary" model='new ValidationSummaryViewModel { ModelState = ViewData.ModelState, OrderedFieldNames = Model.OrderedFieldNames }' />
        <partial name="@PartialNames.ReviewSummary" for="Review" />
        <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">What training will the apprentice take?</h1>
        <form asp-route="@RouteNames.Training_Post" asp-route-wizard="@Model.PageInfo.IsWizard" novalidate>

            <p class="govuk-body">
                If you haven't found appropriate training for the vacancy, you can
                <a class="govuk-link" href="@externalLinks.Value.FindApprenticeshipTrainingUrl" target="_blank">Find apprenticeship training here (opens in new tab)</a>.
            </p>
            <div esfa-validation-marker-for="SelectedProgrammeId" class="govuk-form-group">
                <label asp-for="SelectedProgrammeId" class="govuk-label govuk-!-font-weight-bold">
                    <span class="govuk-hint">Enter apprenticeship training title</span>
                </label>
                <span esfa-validation-message-for="SelectedProgrammeId" class="govuk-error-message"></span>
                <div class="govuk-!-margin-bottom-2">
                    <select asp-for="SelectedProgrammeId" class="govuk-select">
                        <option value="">Please select</option>
                        @foreach (var programme in Model.Programmes)
                        {
                            <option value="@programme.Id">@programme.Name</option>
                        }
                    </select>
                </div>
                <p class="govuk-body">
                    <a asp-route="@RouteNames.Training_Get" asp-route-clear="true" asp-route-wizard="@Model.PageInfo.IsWizard" class="govuk-link">Clear search</a>
                </p>
            </div>
            <button type="submit" class="govuk-button save-button" esfa-automation="continue-button">Continue</button>
            <a asp-show="@Model.PageInfo.IsWizard" asp-route="@RouteNames.Vacancies_Get" class="govuk-link das-button-link">Cancel</a>
            <a asp-show="@Model.PageInfo.IsNotWizard" asp-route="@RouteNames.Vacancy_Preview_Get" asp-fragment="@Anchors.TrainingProviderSection" class="govuk-link das-button-link">Cancel</a>

        </form>
    </div>
</div>
@section HeadCSS
    {
    <link asp-append-version="true" rel="stylesheet" media="screen" href="/lib/accessible-autocomplete/style.css" />
}
@section FooterJS
    {
    <script asp-append-version="true" src="/lib/accessible-autocomplete/accessible-autocomplete.min.js"></script>
    <script asp-append-version="true" src="/javascripts/esfa-training-suggestions/training-suggestions-service.js"></script>
    <script nws-csp-add-nonce="true">
        $(function() {
            var selectElementSelector = "#@Html.IdFor(m => m.SelectedProgrammeId)";
            var $selectElement = $(selectElementSelector);

            trainingSuggestionsService.init($selectElement[0]);

            $selectElement.parents("form").on("submit",
                function () {
                    var searchedValue = $(selectElementSelector).val();
                    var $originalSelectElementOptions = $(selectElementSelector + '-select option');

                    var $selectedOption = $originalSelectElementOptions.filter(function (i, optionElement) {
                        return optionElement.text === searchedValue;
                    });

                    if ($selectedOption.length === 0) {
                        $(selectElementSelector + '-select option[value=""]').prop('selected', true);
                    }
                });
        });
    </script>
}

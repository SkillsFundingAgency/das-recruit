{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "EnvironmentName": {
      "type": "string"
    },
    "webJobAspLocation": {
      "type": "string",
      "allowedValues": [
        "North Europe",
        "West Europe"
      ],
      "defaultValue": "West Europe"
    },
    "aseHostingEnvironmentName": {
      "type": "string",
      "defaultValue": ""
    },
    "aseResourceGroup": {
      "type": "string",
      "defaultValue": ""
    },
    "webJobAspSize": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3"
      ]
    },
    "webJobAspInstances": {
      "type": "int"
    },
    "webJobNonASETier": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard"
    },
    "EnvironmentFullName": {
      "type": "string"
    },
    "Authentication": {
      "type": "object",
      "defaultValue": {
        "Authority": "",
        "MetaDataAddress": "",
        "ClientId": "",
        "ClientSecret": ""
      }
    },
    "AccountApiConfiguration": {
      "type": "object",
      "defaultValue": {
        "ApiBaseUrl": "",
        "ClientId": "",
        "ClientSecret": "",
        "IdentifierUri": "",
        "Tenant": ""
      }
    },
    "ProviderRelationshipsApiConfiguration": {
      "type": "object",
      "defaultValue": {
        "ApiBaseUrl": "",
        "ClientId": "",
        "ClientSecret": "",
        "IdentifierUri": "",
        "Tenant": ""
      }
    },
    "ExternalLinks": {
      "type": "object",
      "defaultValue": {
        "ManageApprenticeshipSiteUrl": "",
        "EmployerIdamsSiteUrl": "",
        "StaffIdamsUrl": "",
        "ProviderApprenticeshipSiteUrl": "",
        "CommitmentsSiteUrl": "",
        "ProviderCommitmentsSiteUrl": ""
      }
    },
    "Features": {
      "type": "object",
      "defaultValue": {
        "AllowLevyPayingEmployersOnly": true,
        "SetNotificationPreferences": false
      }
    },
    "LoggingRedisConnectionString": {
      "type": "securestring",
      "defaultValue": ""
    },
    "StorageRedisConnectionString": {
      "type": "securestring",
      "defaultValue": ""
    },
    "ApprenticeshipProgrammesApiBaseUrl": {
      "type": "string",
      "defaultValue": ""
    },
    "GoogleMapsPrivateKey": {
      "type": "string",
      "defaultValue": ""
    },
    "UseTableStorageQueryStore": {
      "type": "bool",
      "defaultValue": false
    },
    "WhitelistedProvidersList":{
      "type": "string",
      "defaultValue": ""
    },
    "SharedAppServicePlanName": {
      "type": "string"
    },
    "SharedAppServicePlanResourceGroup": {
      "type": "string"
    },
    "EmployerCustomHostname": {
      "type": "string"
    },
    "EmployerKeyvaultCertificateName": {
      "type": "string"
    },
    "QAAppCustomHostname": {
      "type": "string"
    },
    "QAAppKeyvaultCertificateName": {
      "type": "string"
    },
    "QAAuthentication": {
      "type": "object",
      "defaultValue": {
        "Wtrealm": "",
        "MetaDataAddress": ""
      }
    },
    "QALegacyAuthorization": {
      "type": "object",
      "defaultValue": {
        "ClaimType": "",
        "UserClaimValue": "",
        "TeamLeadClaimValue": ""
      }
    },
    "QAAuthorization": {
      "type": "object",
      "defaultValue": {
        "ClaimType": "",
        "UserClaimValue": "",
        "TeamLeadClaimValue": ""
      }
    },
    "ProviderAuthentication": {
      "type": "object",
      "defaultValue": {
        "Wtrealm": "",
        "MetaDataAddress": ""
      }
    },
    "SlackWebhook": {
      "type": "string",
      "defaultValue": ""
    },
    "FindAnApprenticeshipDetailPrefixUrl": {
      "type": "string",
      "defaultValue": ""
    },
    "GeocodePostcodeAnywhereKey": {
      "type": "string",
      "defaultValue": ""
    },
    "PostcodeAnywhereKey": {
      "type": "string",
      "defaultValue": ""
    },
    "FaaConfiguration": {
      "type": "object",
      "defaultValue": {
        "StorageConnectionString": ""
      },
      "metadata": {
        "description": "StorageConnectionString requires at least the Send claim for the relevant Service Bus endpoint"
      }
    },
    "VacancyApiConfiguration": {
      "type": "object",
      "defaultValue": {
        "ApiReadSubscriptionKey": "",
        "ApiSearchBaseUrl": "https://apis.apprenticeships.sfa.bis.gov.uk/vacancies/v1/apprenticeships/search"
      }
    },
    "VacancyReviewAssignationTimeoutMinutes": {
      "type": "int",
      "defaultValue": 180
    },
    "EmployerAccountsSqlDbConnectionString": {
      "type": "securestring",
      "defaultValue": ""
    },
    "EmployerFinanceSqlDbConnectionString": {
      "type": "securestring",
      "defaultValue": ""
    },
    "VacancyAnalyticEventsSqlDbConnectionString": {
      "type": "securestring",
      "defaultValue": ""
    },
    "ProviderCustomHostname": {
      "type": "string"
    },
    "ProviderKeyvaultCertificateName": {
      "type": "string"
    },
    "DasSharedNServiceBusConfiguration": {
      "type" : "object"
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
    "webJobAppServicePlanName": "[concat('das-', toLower(parameters('environmentName')),'-rcrt-webjob-asp')]",
    "EmployerRecruitAppServiceName": "[concat('das-', toLower(parameters('EnvironmentName')), '-rcrt-as')]",
    "ProviderRecruitAppServiceName": "[concat('das-', toLower(parameters('EnvironmentName')), '-rcrt-pr-as')]",
    "QAAppServiceName": "[concat('das-', toLower(parameters('EnvironmentName')), '-rcrt-qa-as')]",
    "CosmosDbName": "[concat('das-', toLower(parameters('EnvironmentName')),'-rcrt-cdb')]",
    "WebJobAppServiceName": "[concat('das-', toLower(parameters('EnvironmentName')), '-rcrt-webjob-as')]",
    "StorageAccountName": "[concat('das', toLower(parameters('EnvironmentName')), 'rcrtstr')]"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('EmployerRecruitAppServiceName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('EmployerRecruitAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('EmployerRecruitAppServiceName')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('QAAppServiceName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('QAAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('QAAppServiceName')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('ProviderRecruitAppServiceName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('ProviderRecruitAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('ProviderRecruitAppServiceName')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('CosmosDbName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'cosmos-db.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cosmosDbName": {
            "value": "[variables('CosmosDbName')]"
          },
          "cosmosDbType": {
            "value": "MongoDB"
          },
          "defaultConsistencyLevel": {
            "value": "Strong"
          }
        }
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2017-05-10",
      "name": "Employer-Recruit-AppService",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('EmployerRecruitAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('SharedAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('SharedAppServicePlanResourceGroup')]"
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "Authentication:Authority",
                "value": "[parameters('Authentication').Authority]"
              },
              {
                "name": "Authentication:MetaDataAddress",
                "value": "[parameters('Authentication').MetaDataAddress]"
              },
              {
                "name": "Authentication:ClientId",
                "value": "[parameters('Authentication').ClientId]"
              },
              {
                "name": "Authentication:ClientSecret",
                "value": "[parameters('Authentication').ClientSecret]"
              },
              {
                "name": "Slack:WebhookUrl",
                "value": "[parameters('SlackWebhook')]"
              },
              {
                "name": "Slack:FindAnApprenticeshipDetailPrefixUrl",
                "value": "[parameters('FindAnApprenticeshipDetailPrefixUrl')]"
              },
              {
                "name": "AccountApiConfiguration:ApiBaseUrl",
                "value": "[parameters('AccountApiConfiguration').ApiBaseUrl]"
              },
              {
                "name": "AccountApiConfiguration:ClientId",
                "value": "[parameters('AccountApiConfiguration').ClientId]"
              },
              {
                "name": "AccountApiConfiguration:ClientSecret",
                "value": "[parameters('AccountApiConfiguration').ClientSecret]"
              },
              {
                "name": "AccountApiConfiguration:IdentifierUri",
                "value": "[parameters('AccountApiConfiguration').IdentifierUri]"
              },
              {
                "name": "AccountApiConfiguration:Tenant",
                "value": "[parameters('AccountApiConfiguration').Tenant]"
              },
              {
                "name": "ApplicationInsights:InstrumentationKey",
                "value": "[reference(variables('EmployerRecruitAppServiceName')).outputs.InstrumentationKey.value]"
              },
              {
                "name": "ExternalLinks:ManageApprenticeshipSiteUrl",
                "value": "[parameters('ExternalLinks').ManageApprenticeshipSiteUrl]"
              },
              {
                "name": "ExternalLinks:EmployerIdamsSiteUrl",
                "value": "[parameters('ExternalLinks').EmployerIdamsSiteUrl]"
              },
              {
                "name": "ExternalLinks:CommitmentsSiteUrl",
                "value": "[parameters('ExternalLinks').CommitmentsSiteUrl]"
              },
              {
                "name": "Features:AllowLevyPayingEmployersOnly",
                "value": "[parameters('Features').AllowLevyPayingEmployersOnly]"
              },
              {
                "name": "Features:SetNotificationPreferences",
                "value": "[parameters('Features').SetNotificationPreferences]"
              },
              {
                "name": "ASPNETCORE_ENVIRONMENT",
                "value": "[toUpper(parameters('EnvironmentFullName'))]"
              },
              {
                "name": "GoogleMapsPrivateKey",
                "value": "[parameters('GoogleMapsPrivateKey')]"
              },
              {
                "name": "PostcodeAnywhere:Key",
                "value": "[parameters('PostcodeAnywhereKey')]"
              },
              {
                "name": "FaaConfiguration:StorageConnectionString",
                "value": "[parameters('FaaConfiguration').StorageConnectionString]"
              },
              {
                "name": "UseTableStorageQueryStore",
                "value": "[parameters('UseTableStorageQueryStore')]"
              }
            ]
          },
          "appServiceConnectionStrings": {
            "value": [
              {
                "name": "Redis",
                "connectionString": "[parameters('LoggingRedisConnectionString')]",
                "type": "Custom"
              },
              {
                "name": "StorageRedis",
                "connectionString": "[parameters('StorageRedisConnectionString')]",
                "type": "Custom"
              },
              {
                "name": "MongoDb",
                "connectionString": "[concat('mongodb://', variables('CosmosDbName'), ':', reference(variables('CosmosDbName')).outputs.PrimaryMasterKey.value,'@', variables('CosmosDbName'), '.documents.azure.com:10255/?ssl=true&replicaSet=globaldb')]",
                "type": "Custom"
              },
              {
                "name": "QueueStorage",
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
                "type": "Custom"
              },
              {
                "name": "TableStorage",
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
                "type": "Custom"
              }
            ]
          },
          "customHostName": {
            "value": "[parameters('EmployerCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference(resourceId(parameters('sharedAppServicePlanResourceGroup'), 'Microsoft.Web/certificates', parameters('EmployerKeyvaultCertificateName')), '2016-03-01').Thumbprint]"
          }
        }
      },
      "dependsOn": [
        "[variables('EmployerRecruitAppServiceName')]",
        "[variables('CosmosDbName')]"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "QA-App-AppService",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('QAAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('SharedAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('SharedAppServicePlanResourceGroup')]"
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "Authentication:Wtrealm",
                "value": "[parameters('QAAuthentication').WtRealm]"
              },
              {
                "name": "Authentication:MetaDataAddress",
                "value": "[parameters('QAAuthentication').MetaDataAddress]"
              },
              {
                "name": "ApplicationInsights:InstrumentationKey",
                "value": "[reference(variables('QAAppServiceName')).outputs.InstrumentationKey.value]"
              },
              {
                "name": "ASPNETCORE_ENVIRONMENT",
                "value": "[toUpper(parameters('EnvironmentFullName'))]"
              },
              {
                "name": "GoogleMapsPrivateKey",
                "value": "[parameters('GoogleMapsPrivateKey')]"
              },
              {
                "name": "LegacyAuthorization:ClaimType",
                "value": "[parameters('QALegacyAuthorization').ClaimType]"
              },
              {
                "name": "LegacyAuthorization:UserClaimValue",
                "value": "[parameters('QALegacyAuthorization').UserClaimValue]"
              },
              {
                "name": "LegacyAuthorization:TeamLeadClaimValue",
                "value": "[parameters('QALegacyAuthorization').TeamLeadClaimValue]"
              },
              {
                "name": "Authorization:ClaimType",
                "value": "[parameters('QAAuthorization').ClaimType]"
              },
              {
                "name": "Authorization:UserClaimValue",
                "value": "[parameters('QAAuthorization').UserClaimValue]"
              },
              {
                "name": "Authorization:TeamLeadClaimValue",
                "value": "[parameters('QAAuthorization').TeamLeadClaimValue]"
              },
              {
                "name": "ExternalLinks:StaffIdamsUrl",
                "value": "[parameters('ExternalLinks').StaffIdamsUrl]"
              },
              {
                "name": "VacancyReviewAssignationTimeoutMinutes",
                "value": "[parameters('VacancyReviewAssignationTimeoutMinutes')]"
              },
              {
                "name": "Slack:WebhookUrl",
                "value": "[parameters('SlackWebhook')]"
              },
              {
                "name": "Slack:FindAnApprenticeshipDetailPrefixUrl",
                "value": "[parameters('FindAnApprenticeshipDetailPrefixUrl')]"
              },
              {
                "name": "UseTableStorageQueryStore",
                "value": "[parameters('UseTableStorageQueryStore')]"
              }
            ]
          },
          "appServiceConnectionStrings": {
            "value": [
              {
                "name": "Redis",
                "connectionString": "[parameters('LoggingRedisConnectionString')]",
                "type": "Custom"
              },
              {
                "name": "StorageRedis",
                "connectionString": "[parameters('StorageRedisConnectionString')]",
                "type": "Custom"
              },
              {
                "name": "MongoDb",
                "connectionString": "[concat('mongodb://', variables('CosmosDbName'), ':', reference(variables('CosmosDbName')).outputs.PrimaryMasterKey.value,'@', variables('CosmosDbName'), '.documents.azure.com:10255/?ssl=true&replicaSet=globaldb')]",
                "type": "Custom"
              },
              {
                "name": "QueueStorage",
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
                "type": "Custom"
              },
              {
                "name": "TableStorage",
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
                "type": "Custom"
              }
            ]
          },
          "customHostName": {
            "value": "[parameters('QAAppCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference(resourceId(parameters('sharedAppServicePlanResourceGroup'), 'Microsoft.Web/certificates', parameters('QAAppKeyvaultCertificateName')), '2016-03-01').Thumbprint]"
          }
        }
      },
      "dependsOn": [
        "[variables('QAAppServiceName')]"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "Provider-Recruit-AppService",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('ProviderRecruitAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('SharedAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('SharedAppServicePlanResourceGroup')]"
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "Authentication:WtRealm",
                "value": "[parameters('ProviderAuthentication').WtRealm]"
              },
              {
                "name": "Authentication:MetaDataAddress",
                "value": "[parameters('ProviderAuthentication').MetaDataAddress]"
              },
              {
                "name": "Slack:WebhookUrl",
                "value": "[parameters('SlackWebhook')]"
              },
              {
                "name": "Slack:FindAnApprenticeshipDetailPrefixUrl",
                "value": "[parameters('FindAnApprenticeshipDetailPrefixUrl')]"
              },
              {
                "name": "ExternalLinks:ProviderApprenticeshipSiteUrl",
                "value": "[parameters('ExternalLinks').ProviderApprenticeshipSiteUrl]"
              },
              {
                "name": "ExternalLinks:CommitmentsSiteUrl",
                "value": "[parameters('ExternalLinks').ProviderCommitmentsSiteUrl]"
              },
              {
                "name": "Features:SetNotificationPreferences",
                "value": "[parameters('Features').SetNotificationPreferences]"
              },
              {
                "name": "ASPNETCORE_ENVIRONMENT",
                "value": "[toUpper(parameters('EnvironmentFullName'))]"
              },
              {
                "name": "GoogleMapsPrivateKey",
                "value": "[parameters('GoogleMapsPrivateKey')]"
              },
              {
                "name": "PostcodeAnywhere:Key",
                "value": "[parameters('PostcodeAnywhereKey')]"
              },
              {
                "name": "UseTableStorageQueryStore",
                "value": "[parameters('UseTableStorageQueryStore')]"
              },
              {
                "name": "FaaConfiguration:StorageConnectionString",
                "value": "[parameters('FaaConfiguration').StorageConnectionString]"
              },
              {
                "name": "WhitelistedProviders",
                "value": "[parameters('WhitelistedProvidersList')]"
              }
            ]
          },
          "appServiceConnectionStrings": {
            "value": [
              {
                "name": "Redis",
                "connectionString": "[parameters('LoggingRedisConnectionString')]",
                "type": "Custom"
              },
              {
                "name": "StorageRedis",
                "connectionString": "[parameters('StorageRedisConnectionString')]",
                "type": "Custom"
              },
              {
                "name": "MongoDb",
                "connectionString": "[concat('mongodb://', variables('CosmosDbName'), ':', reference(variables('CosmosDbName')).outputs.PrimaryMasterKey.value,'@', variables('CosmosDbName'), '.documents.azure.com:10255/?ssl=true&replicaSet=globaldb')]",
                "type": "Custom"
              },
              {
                "name": "QueueStorage",
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
                "type": "Custom"
              },
              {
                "name": "TableStorage",
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
                "type": "Custom"
              }
            ]
          },
          "customHostName": {
            "value": "[parameters('ProviderCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference(resourceId(parameters('sharedAppServicePlanResourceGroup'), 'Microsoft.Web/certificates', parameters('ProviderKeyvaultCertificateName')), '2016-03-01').Thumbprint]"
          }
        }
      },
      "dependsOn": [
        "[variables('CosmosDbName')]"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('StorageAccountName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('StorageAccountName')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('webJobAppServicePlanName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('webJobAppServicePlanName')]"
          },
          "aspLocation": {
            "value": "[parameters('webJobAspLocation')]"
          },
          "aseHostingEnvironmentName": {
            "value": "[parameters('aseHostingEnvironmentName')]"
          },
          "aseResourceGroup": {
            "value": "[parameters('aseResourceGroup')]"
          },
          "aspSize": {
            "value": "[parameters('webJobAspSize')]"
          },
          "aspInstances": {
            "value": "[parameters('webJobAspInstances')]"
          },
          "nonASETier": {
            "value": "[parameters('webJobNonASETier')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2017-05-10",
      "name": "WebJob-AppService",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('WebJobAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[variables('webJobAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "ASPNETCORE_ENVIRONMENT",
                "value": "[toUpper(parameters('EnvironmentFullName'))]"
              },
              {
                "name": "ApprenticeshipProgrammesApiBaseUrl",
                "value": "[parameters('ApprenticeshipProgrammesApiBaseUrl')]"
              },
              {
                "name": "AccountApiConfiguration:ApiBaseUrl",
                "value": "[parameters('AccountApiConfiguration').ApiBaseUrl]"
              },
              {
                "name": "AccountApiConfiguration:ClientId",
                "value": "[parameters('AccountApiConfiguration').ClientId]"
              },
              {
                "name": "AccountApiConfiguration:ClientSecret",
                "value": "[parameters('AccountApiConfiguration').ClientSecret]"
              },
              {
                "name": "AccountApiConfiguration:IdentifierUri",
                "value": "[parameters('AccountApiConfiguration').IdentifierUri]"
              },
              {
                "name": "AccountApiConfiguration:Tenant",
                "value": "[parameters('AccountApiConfiguration').Tenant]"
              },
              {
                "name": "ProviderRelationshipsApiConfiguration:ApiBaseUrl",
                "value": "[parameters('ProviderRelationshipsApiConfiguration').ApiBaseUrl]"
              },
              {
                "name": "ProviderRelationshipsApiConfiguration:ClientId",
                "value": "[parameters('ProviderRelationshipsApiConfiguration').ClientId]"
              },
              {
                "name": "ProviderRelationshipsApiConfiguration:ClientSecret",
                "value": "[parameters('ProviderRelationshipsApiConfiguration').ClientSecret]"
              },
              {
                "name": "ProviderRelationshipsApiConfiguration:IdentifierUri",
                "value": "[parameters('ProviderRelationshipsApiConfiguration').IdentifierUri]"
              },
              {
                "name": "ProviderRelationshipsApiConfiguration:Tenant",
                "value": "[parameters('ProviderRelationshipsApiConfiguration').Tenant]"
              },
              {
                "name": "VacancyApiConfiguration:ApiSearchBaseUrl",
                "value": "[parameters('VacancyApiConfiguration').ApiSearchBaseUrl]"
              },
              {
                "name": "VacancyApiConfiguration:ApiReadSubscriptionKey",
                "value": "[parameters('VacancyApiConfiguration').ApiReadSubscriptionKey]"
              },
              {
                "name": "Slack:WebhookUrl",
                "value": "[parameters('SlackWebhook')]"
              },
              {
                "name": "Slack:FindAnApprenticeshipDetailPrefixUrl",
                "value": "[parameters('FindAnApprenticeshipDetailPrefixUrl')]"
              },
              {
                "name": "FaaConfiguration:StorageConnectionString",
                "value": "[parameters('FaaConfiguration').StorageConnectionString]"
              },
              {
                "name": "Geocode:PostcodeAnywhereKey",
                "value": "[parameters('GeocodePostcodeAnywhereKey')]"
              },
              {
                "name": "DasSharedNServiceBusConfiguration:ConnectionString",
                "value": "[parameters('DasSharedNServiceBusConfiguration').ConnectionString]"
              },
              {
                "name": "DasSharedNServiceBusConfiguration:NServiceBusLicense",
                "value": "[parameters('DasSharedNServiceBusConfiguration').NServiceBusLicense]"
              }
            ]
          },
          "appServiceConnectionStrings": {
            "value": [
              {
                "name": "Redis",
                "connectionString": "[parameters('LoggingRedisConnectionString')]",
                "type": "Custom"
              },
              {
                "name": "MongoDb",
                "connectionString": "[concat('mongodb://', variables('CosmosDbName'), ':', reference(variables('CosmosDbName')).outputs.PrimaryMasterKey.value,'@', variables('CosmosDbName'), '.documents.azure.com:10255/?ssl=true&replicaSet=globaldb')]",
                "type": "Custom"
              },
              {
                "name": "QueueStorage",
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
                "type": "Custom"
              },
              {
                "name": "AzureWebJobsDashboard",
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
                "type": "Custom"
              },
              {
                "name": "AzureWebJobsStorage",
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
                "type": "Custom"
              },
              {
                "name": "EmployerAccountsSqlDbConnectionString",
                "connectionString": "[parameters('EmployerAccountsSqlDbConnectionString')]",
                "type": "Custom"
              },
              {
                "name": "EmployerFinanceSqlDbConnectionString",
                "connectionString": "[parameters('EmployerFinanceSqlDbConnectionString')]",
                "type": "Custom"
              },
              {
                "name": "VacancyAnalyticEventsSqlDbConnectionString",
                "connectionString": "[parameters('VacancyAnalyticEventsSqlDbConnectionString')]",
                "type": "Custom"
              },
              {
                "name": "TableStorage",
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
                "type": "Custom"
              }
            ]
          },
          "appServiceVirtualApplications": {
            "value": [
              {
                "virtualPath": "/",
                "physicalPath": "site\\wwwroot"
              },
              {
                "virtualPath": "/Recruit.Vacancies.Jobs",
                "physicalPath": "site\\wwwroot\\app_data\\jobs\\continuous\\Recruit.Vacancies.Jobs"
              }
            ]
          },
          "deployStagingSlot": {
            "value": false
          }
        }
      },
      "dependsOn": [
        "[variables('StorageAccountName')]",
        "[variables('webJobAppServicePlanName')]",
        "[variables('CosmosDbName')]"
      ]
    }
  ],
  "outputs": {}
}

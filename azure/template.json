{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
	  "EnvironmentName": {
		"type": "string"
	  },
	  "webJobAspLocation": {
		"type": "string",
		"allowedValues": [
		  "North Europe",
		  "West Europe"
		],
		"defaultValue": "West Europe"
	  },
	  "webJobAspSize": {
		"type": "string",
		"allowedValues": [
		  "1",
		  "2",
		  "3"
		]
	  },
	  "webJobAspInstances": {
		"type": "int"
	  },
	  "webJobNonASETier": {
		"type": "string",
		"allowedValues": [
		  "Basic",
		  "Standard",
		  "Premium"
		],
		"defaultValue": "Basic"
	  },
	  "EnvironmentFullName": {
		"type": "string"
	  },
	  "Authentication": {
		"type": "secureObject",
		"defaultValue": {
		  "Authority": "",
		  "MetaDataAddress": "",
		  "ClientId": "",
		  "ClientSecret": ""
		}
	  },
	  "AccountApiConfiguration": {
		"type": "secureObject",
		"defaultValue": {
		  "ApiBaseUrl": "",
		  "ClientId": "",
		  "ClientSecret": "",
		  "IdentifierUri": "",
		  "Tenant": ""
		}
	  },
	  "ProviderRelationshipsApiConfiguration": {
		"type": "secureObject",
		"defaultValue": {
		  "ApiBaseUrl": "",
		  "ClientId": "",
		  "ClientSecret": "",
		  "IdentifierUri": "",
		  "Tenant": ""
		}
	  },
	  "PasAccountApiConfiguration": {
		"type": "secureObject",
		"defaultValue": {
		  "ApiBaseUrl": "",
		  "ClientId": "",
		  "ClientSecret": "",
		  "IdentifierUri": "",
		  "Tenant": ""
		}
	  },
	  "ExternalLinks": {
		"type": "object",
		"defaultValue": {
		  "ManageApprenticeshipSiteUrl": "",
		  "EmployerIdamsSiteUrl": "",
		  "StaffIdamsUrl": "",
		  "ProviderApprenticeshipSiteUrl": "",
		  "CommitmentsSiteUrl": "",
		  "ProviderCommitmentsSiteUrl": "",
		  "SignProviderAgreementUrl": "",
		  "ReservationsSiteUrl": "",
		  "EmployerFavouritesUrl": "",
		  "TrainingProviderPermissionUrl": ""
		}
	  },
	  "Features": {
		"type": "object",
		"defaultValue": {
		  "SetNotificationPreferences": false
		}
	  },
	  "ConfigurationStorageConnectionString": {
		"type": "securestring"
	  },
	  "LoggingRedisConnectionString": {
		"type": "securestring",
		"defaultValue": ""
	  },
	  "StorageRedisConnectionString": {
		"type": "securestring",
		"defaultValue": ""
	  },
	  "DataProtectionKeysDatabase": {
		"type": "string",
		"defaultValue": ""
	  },
	  "ApprenticeshipProgrammesApiBaseUrl": {
		"type": "string",
		"defaultValue": ""
	  },
	  "GoogleMapsPrivateKey": {
		"type": "securestring",
		"defaultValue": ""
	  },
	  "UseTableStorageQueryStore": {
		"type": "bool",
		"defaultValue": false
	  },
	  "SharedFrontendAppServicePlanName": {
		"type": "string"
	  },
	  "SharedAppServicePlanResourceGroup": {
		"type": "string"
	  },
	  "EmployerCustomHostname": {
		"type": "string"
	  },
	  "EmployerKeyvaultCertificateName": {
		"type": "string"
	  },
	  "QAAppCustomHostname": {
		"type": "string"
	  },
	  "QAAppKeyvaultCertificateName": {
		"type": "string"
	  },
	  "QAAuthentication": {
		"type": "object",
		"defaultValue": {
		  "Wtrealm": "",
		  "MetaDataAddress": ""
		}
	  },
	  "QALegacyAuthorization": {
		"type": "secureObject",
		"defaultValue": {
		  "ClaimType": "",
		  "UserClaimValue": "",
		  "TeamLeadClaimValue": ""
		}
	  },
	  "QAAuthorization": {
		"type": "secureObject",
		"defaultValue": {
		  "ClaimType": "",
		  "UserClaimValue": "",
		  "TeamLeadClaimValue": ""
		}
	  },
	  "ProviderAuthentication": {
		"type": "object",
		"defaultValue": {
		  "Wtrealm": "",
		  "MetaDataAddress": ""
		}
	  },
	  "SlackWebhook": {
		"type": "securestring",
		"defaultValue": ""
	  },
	  "FindAnApprenticeshipDetailPrefixUrl": {
		"type": "string",
		"defaultValue": ""
	  },
	  "GeocodePostcodeAnywhereKey": {
		"type": "securestring",
		"defaultValue": ""
	  },
	  "PostcodeAnywhereKey": {
		"type": "securestring",
		"defaultValue": ""
	  },
	  "ZenDesk": {
		"type": "secureObject",
		"defaultValue": {
		  "EmployerSnippetSectionId": "",
		  "ProviderSnippetSectionId": "",
		  "SnippetKey": "",
		  "CobrowsingSnippetKey": ""
		}
	  },
	  "FaaConfiguration": {
		"type": "secureObject",
		"defaultValue": {
		  "StorageConnectionString": ""
		},
		"metadata": {
		  "description": "StorageConnectionString requires at least the Send claim for the relevant Service Bus endpoint"
		}
	  },
	  "VacancyApiConfiguration": {
		"type": "secureObject",
		"defaultValue": {
		  "ApiReadSubscriptionKey": "",
		  "ApiSearchBaseUrl": "https://apis.apprenticeships.sfa.bis.gov.uk/vacancies/v1/apprenticeships/search"
		}
	  },
	  "VacancyReviewAssignationTimeoutMinutes": {
		"type": "int",
		"defaultValue": 180
	  },
	  "EmployerAccountsSqlDbConnectionString": {
		"type": "securestring",
		"defaultValue": ""
	  },
	  "EmployerFinanceSqlDbConnectionString": {
		"type": "securestring",
		"defaultValue": ""
	  },
	  "VacancyAnalyticEventsSqlDbConnectionString": {
		"type": "securestring",
		"defaultValue": ""
	  },
	  "ProviderCustomHostname": {
		"type": "string"
	  },
	  "ProviderKeyvaultCertificateName": {
		"type": "string"
	  },
	  "DasSharedNServiceBusConfiguration": {
		"type": "secureObject"
	  },
	  "CommunicationsConfiguration": {
		"type": "secureObject"
	  },
	  "NotificationsApiClientConfiguration": {
		"type": "secureObject"
	  },
	  "cosmosDbIpRangeFilter": {
		"type": "string",
		"defaultValue": ""
	  },
	  "DasEncodings": {
		"type": "securestring"
	  },
	  "cosmosDatabase": {
		"type": "string"
	  },
	  "containerArray": {
		"type": "array"
	  },
	  "sharedKeyvaultName": {
		"type": "string"
	  },
	  "sharedKeyvaultResourceGroup": {
		"type": "string"
	  },
	  "appServiceAllowedIps": {
		"type": "array",
		"defaultValue": []
	  },
	  "sharedApimResourceGroup": {
		"type": "string"
	  },
	  "sharedApimName": {
		"type": "string"
	  },
	  "recruitOuterApiConfigurationBaseUrl": {
		"type": "string"
	  },
	  "cosmosDbServerVersion": {
		"type": "string"
	  }
	},
	"variables": {
	  "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
	  "webJobAppServicePlanName": "[concat('das-', toLower(parameters('environmentName')),'-rcrt-webjob-asp')]",
	  "EmployerRecruitAppServiceName": "[concat('das-', toLower(parameters('EnvironmentName')), '-rcrt-as')]",
	  "ProviderRecruitAppServiceName": "[concat('das-', toLower(parameters('EnvironmentName')), '-rcrt-pr-as')]",
	  "QAAppServiceName": "[concat('das-', toLower(parameters('EnvironmentName')), '-rcrt-qa-as')]",
	  "CosmosDbName": "[concat('das-', toLower(parameters('EnvironmentName')),'-rcrt-cdb')]",
	  "WebJobAppServiceName": "[concat('das-', toLower(parameters('EnvironmentName')), '-rcrt-webjob-as')]",
	  "StorageAccountName": "[concat('das', toLower(parameters('EnvironmentName')), 'rcrtstr')]"
	},
	"resources": [
	  {
		"apiVersion": "2017-05-10",
		"name": "[variables('EmployerRecruitAppServiceName')]",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"appInsightsName": {
			  "value": "[variables('EmployerRecruitAppServiceName')]"
			},
			"attachedService": {
			  "value": "[variables('EmployerRecruitAppServiceName')]"
			}
		  }
		},
		"dependsOn": []
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "[variables('QAAppServiceName')]",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"appInsightsName": {
			  "value": "[variables('QAAppServiceName')]"
			},
			"attachedService": {
			  "value": "[variables('QAAppServiceName')]"
			}
		  }
		},
		"dependsOn": []
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "[variables('ProviderRecruitAppServiceName')]",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"appInsightsName": {
			  "value": "[variables('ProviderRecruitAppServiceName')]"
			},
			"attachedService": {
			  "value": "[variables('ProviderRecruitAppServiceName')]"
			}
		  }
		},
		"dependsOn": []
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "[variables('CosmosDbName')]",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'cosmos-db.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"cosmosDbName": {
			  "value": "[variables('CosmosDbName')]"
			},
			"cosmosDbType": {
			  "value": "MongoDB"
			},
			"defaultConsistencyLevel": {
			  "value": "Strong"
			},
			"ipRangeFilter": {
			  "value": "[parameters('cosmosDbIpRangeFilter')]"
			},
			"serverVersion": {
			  "value": "[parameters('cosmosDbServerVersion')]"
			}
		  }
		},
		"dependsOn": []
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "cosmos-db-database-deployment",
		"dependsOn": [
		  "[variables('CosmosDbName')]"
		],
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'cosmos-db-database.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"cosmosDbAccountName": {
			  "value": "[variables('cosmosDbName')]"
			},
			"cosmosDatabase": {
			  "value": "[parameters('cosmosDatabase')]"
			},
			"cosmosDBType": {
			  "value": "MongoDB"
			}
		  }
		}
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "[concat('cosmos-db-container-', parameters('containerArray')[copyIndex()].containerName)]",
		"dependsOn": [
		  "[variables('CosmosDbName')]",
		  "cosmos-db-database-deployment"
		],
		"type": "Microsoft.Resources/deployments",
		"condition": "[greater(length(parameters('containerArray')), 0)]",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'cosmos-db-container.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"cosmosDbAccountName": {
			  "value": "[variables('cosmosDbName')]"
			},
			"cosmosDatabase": {
			  "value": "[parameters('cosmosDatabase')]"
			},
			"cosmosDBType": {
			  "value": "MongoDB"
			},
			"containerName": {
			  "value": "[parameters('containerArray')[copyIndex()].containerName]"
			},
			"partitionKey": {
			  "value": "[parameters('containerArray')[copyIndex()].partitionKey]"
			}
		  }
		},
		"copy": {
		  "name": "containercopy",
		  "count": "[length(parameters('containerArray'))]"
		}
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "[concat('cosmos-db-container-settings-', parameters('containerArray')[copyIndex()].containerName)]",
		"dependsOn": [
		  "[variables('CosmosDbName')]",
		  "cosmos-db-database-deployment",
		  "[concat('cosmos-db-container-', parameters('containerArray')[copyIndex()].containerName)]"
		],
		"type": "Microsoft.Resources/deployments",
		"condition": "[greater(length(parameters('containerArray')), 0)]",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'cosmos-db-container-settings.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"cosmosDbAccountName": {
			  "value": "[variables('cosmosDbName')]"
			},
			"cosmosDatabase": {
			  "value": "[parameters('cosmosDatabase')]"
			},
			"cosmosDBType": {
			  "value": "MongoDB"
			},
			"containerName": {
			  "value": "[parameters('containerArray')[copyIndex()].containerName]"
			},
			"throughput": {
			  "value": "[parameters('containerArray')[copyIndex()].throughput]"
			}
		  }
		},
		"copy": {
		  "name": "containercopy",
		  "count": "[length(parameters('containerArray'))]"
		}
	  },
	  {
		"condition": "[greater(length(parameters('EmployerCustomHostname')), 0)]",
		"apiVersion": "2017-05-10",
		"name": "Employer-Recruit-AppService-Certificate",
		"resourceGroup": "[parameters('sharedAppServicePlanResourceGroup')]",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"keyVaultCertificateName": {
			  "value": "[parameters('EmployerKeyvaultCertificateName')]"
			},
			"keyVaultName": {
			  "value": "[parameters('sharedKeyvaultName')]"
			},
			"keyVaultResourceGroup": {
			  "value": "[parameters('sharedKeyvaultResourceGroup')]"
			},
			"serverFarmId": {
			  "value": "[resourceId(parameters('sharedAppServicePlanResourceGroup'), 'Microsoft.Web/serverfarms', parameters('sharedFrontendAppServicePlanName'))]"
			}
		  }
		}
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "Employer-Recruit-AppService",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"appServiceName": {
			  "value": "[variables('EmployerRecruitAppServiceName')]"
			},
			"appServicePlanName": {
			  "value": "[parameters('SharedFrontendAppServicePlanName')]"
			},
			"appServicePlanResourceGroup": {
			  "value": "[parameters('SharedAppServicePlanResourceGroup')]"
			},
			"appServiceAppSettings": {
			  "value": {
				"array": [
				  {
					"name": "Authentication:Authority",
					"value": "[parameters('Authentication').Authority]"
				  },
				  {
					"name": "Authentication:MetaDataAddress",
					"value": "[parameters('Authentication').MetaDataAddress]"
				  },
				  {
					"name": "Authentication:ClientId",
					"value": "[parameters('Authentication').ClientId]"
				  },
				  {
					"name": "Authentication:ClientSecret",
					"value": "[parameters('Authentication').ClientSecret]"
				  },
				  {
					"name": "Slack:WebhookUrl",
					"value": "[parameters('SlackWebhook')]"
				  },
				  {
					"name": "Slack:FindAnApprenticeshipDetailPrefixUrl",
					"value": "[parameters('FindAnApprenticeshipDetailPrefixUrl')]"
				  },
				  {
					"name": "AccountApiConfiguration:ApiBaseUrl",
					"value": "[parameters('AccountApiConfiguration').ApiBaseUrl]"
				  },
				  {
					"name": "AccountApiConfiguration:ClientId",
					"value": "[parameters('AccountApiConfiguration').ClientId]"
				  },
				  {
					"name": "AccountApiConfiguration:ClientSecret",
					"value": "[parameters('AccountApiConfiguration').ClientSecret]"
				  },
				  {
					"name": "AccountApiConfiguration:IdentifierUri",
					"value": "[parameters('AccountApiConfiguration').IdentifierUri]"
				  },
				  {
					"name": "AccountApiConfiguration:Tenant",
					"value": "[parameters('AccountApiConfiguration').Tenant]"
				  },
				  {
					"name": "ApplicationInsights:InstrumentationKey",
					"value": "[reference(variables('EmployerRecruitAppServiceName')).outputs.InstrumentationKey.value]"
				  },
				  {
					"name": "ExternalLinks:ManageApprenticeshipSiteUrl",
					"value": "[parameters('ExternalLinks').ManageApprenticeshipSiteUrl]"
				  },
				  {
					"name": "ExternalLinks:EmployerIdamsSiteUrl",
					"value": "[parameters('ExternalLinks').EmployerIdamsSiteUrl]"
				  },
				  {
					"name": "ExternalLinks:CommitmentsSiteUrl",
					"value": "[parameters('ExternalLinks').CommitmentsSiteUrl]"
				  },
				  {
					"name": "ExternalLinks:EmployerFavouritesUrl",
					"value": "[parameters('ExternalLinks').EmployerFavouritesUrl]"
				  },
				  {
					"name": "ExternalLinks:TrainingProviderPermissionUrl",
					"value": "[parameters('ExternalLinks').TrainingProviderPermissionUrl]"
				  },
				  {
					"name": "Features:SetNotificationPreferences",
					"value": "[parameters('Features').SetNotificationPreferences]"
				  },
				  {
					"name": "ASPNETCORE_ENVIRONMENT",
					"value": "[toUpper(parameters('EnvironmentFullName'))]"
				  },
				  {
					"name": "GoogleMapsPrivateKey",
					"value": "[parameters('GoogleMapsPrivateKey')]"
				  },
				  {
					"name": "PostcodeAnywhere:Key",
					"value": "[parameters('PostcodeAnywhereKey')]"
				  },
				  {
					"name": "FaaConfiguration:StorageConnectionString",
					"value": "[parameters('FaaConfiguration').StorageConnectionString]"
				  },
				  {
					"name": "UseTableStorageQueryStore",
					"value": "[parameters('UseTableStorageQueryStore')]"
				  },
				  {
					"name": "ZenDesk:SnippetSectionId",
					"value": "[parameters('ZenDesk').EmployerSnippetSectionId]"
				  },
				  {
					"name": "ZenDesk:SnippetKey",
					"value": "[parameters('ZenDesk').SnippetKey]"
				  },
				  {
					"name": "ZenDesk:CobrowsingSnippetKey",
					"value": "[parameters('ZenDesk').CobrowsingSnippetKey]"
				  },
				  {
					"name": "RedisConnectionSettings:RedisConnectionString",
					"value": "[parameters('StorageRedisConnectionString')]"
				  },
				  {
					"name": "RedisConnectionSettings:DataProtectionKeysDatabase",
					"value": "[parameters('DataProtectionKeysDatabase')]"
				  }
				]
			  }
			},
			"appServiceConnectionStrings": {
			  "value": {
				"array": [
				  {
					"name": "Redis",
					"connectionString": "[parameters('LoggingRedisConnectionString')]",
					"type": "Custom"
				  },
				  {
					"name": "MongoDb",
					"connectionString": "[concat('mongodb://', variables('CosmosDbName'), ':', reference(variables('CosmosDbName')).outputs.PrimaryMasterKey.value,'@', variables('CosmosDbName'), '.documents.azure.com:10255/?ssl=true&replicaSet=globaldb')]",
					"type": "Custom"
				  },
				  {
					"name": "QueueStorage",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  },
				  {
					"name": "TableStorage",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  }
				]
			  }
			},
			"customHostName": {
			  "value": "[parameters('EmployerCustomHostname')]"
			},
			"certificateThumbprint": {
			  "value": "[if(greater(length(parameters('EmployerCustomHostname')), 0), reference('Employer-Recruit-AppService-Certificate', '2018-11-01').outputs.certificateThumbprint.value, '')]"
			},
			"ipSecurityRestrictions": {
			  "value": "[parameters('appServiceAllowedIps')]"
			}
		  }
		},
		"dependsOn": [
		  "[variables('EmployerRecruitAppServiceName')]",
		  "[variables('CosmosDbName')]",
		  "Employer-Recruit-AppService-Certificate"
		]
	  },
	  {
		"condition": "[greater(length(parameters('QAAppCustomHostname')), 0)]",
		"apiVersion": "2017-05-10",
		"name": "QA-App-AppService-Certificate",
		"resourceGroup": "[parameters('sharedAppServicePlanResourceGroup')]",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"keyVaultCertificateName": {
			  "value": "[parameters('QAAppKeyvaultCertificateName')]"
			},
			"keyVaultName": {
			  "value": "[parameters('sharedKeyvaultName')]"
			},
			"keyVaultResourceGroup": {
			  "value": "[parameters('sharedKeyvaultResourceGroup')]"
			},
			"serverFarmId": {
			  "value": "[resourceId(parameters('sharedAppServicePlanResourceGroup'), 'Microsoft.Web/serverfarms', parameters('sharedFrontendAppServicePlanName'))]"
			}
		  }
		}
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "QA-App-AppService",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"appServiceName": {
			  "value": "[variables('QAAppServiceName')]"
			},
			"appServicePlanName": {
			  "value": "[parameters('SharedFrontendAppServicePlanName')]"
			},
			"appServicePlanResourceGroup": {
			  "value": "[parameters('SharedAppServicePlanResourceGroup')]"
			},
			"appServiceAppSettings": {
			  "value": {
				"array": [
				  {
					"name": "Authentication:Wtrealm",
					"value": "[parameters('QAAuthentication').WtRealm]"
				  },
				  {
					"name": "Authentication:MetaDataAddress",
					"value": "[parameters('QAAuthentication').MetaDataAddress]"
				  },
				  {
					"name": "ApplicationInsights:InstrumentationKey",
					"value": "[reference(variables('QAAppServiceName')).outputs.InstrumentationKey.value]"
				  },
				  {
					"name": "ASPNETCORE_ENVIRONMENT",
					"value": "[toUpper(parameters('EnvironmentFullName'))]"
				  },
				  {
					"name": "GoogleMapsPrivateKey",
					"value": "[parameters('GoogleMapsPrivateKey')]"
				  },
				  {
					"name": "LegacyAuthorization:ClaimType",
					"value": "[parameters('QALegacyAuthorization').ClaimType]"
				  },
				  {
					"name": "LegacyAuthorization:UserClaimValue",
					"value": "[parameters('QALegacyAuthorization').UserClaimValue]"
				  },
				  {
					"name": "LegacyAuthorization:TeamLeadClaimValue",
					"value": "[parameters('QALegacyAuthorization').TeamLeadClaimValue]"
				  },
				  {
					"name": "Authorization:ClaimType",
					"value": "[parameters('QAAuthorization').ClaimType]"
				  },
				  {
					"name": "Authorization:UserClaimValue",
					"value": "[parameters('QAAuthorization').UserClaimValue]"
				  },
				  {
					"name": "Authorization:TeamLeadClaimValue",
					"value": "[parameters('QAAuthorization').TeamLeadClaimValue]"
				  },
				  {
					"name": "ExternalLinks:StaffIdamsUrl",
					"value": "[parameters('ExternalLinks').StaffIdamsUrl]"
				  },
				  {
					"name": "VacancyReviewAssignationTimeoutMinutes",
					"value": "[parameters('VacancyReviewAssignationTimeoutMinutes')]"
				  },
				  {
					"name": "Slack:WebhookUrl",
					"value": "[parameters('SlackWebhook')]"
				  },
				  {
					"name": "Slack:FindAnApprenticeshipDetailPrefixUrl",
					"value": "[parameters('FindAnApprenticeshipDetailPrefixUrl')]"
				  },
				  {
					"name": "UseTableStorageQueryStore",
					"value": "[parameters('UseTableStorageQueryStore')]"
				  },
				  {
					"name": "FaaConfiguration:StorageConnectionString",
					"value": "[parameters('FaaConfiguration').StorageConnectionString]"
				  },
				  {
					"name": "RedisConnectionSettings:RedisConnectionString",
					"value": "[parameters('StorageRedisConnectionString')]"
				  },
				  {
					"name": "RedisConnectionSettings:DataProtectionKeysDatabase",
					"value": "[parameters('DataProtectionKeysDatabase')]"
				  }
				]
			  }
			},
			"appServiceConnectionStrings": {
			  "value": {
				"array": [
				  {
					"name": "Redis",
					"connectionString": "[parameters('LoggingRedisConnectionString')]",
					"type": "Custom"
				  },
				  {
					"name": "MongoDb",
					"connectionString": "[concat('mongodb://', variables('CosmosDbName'), ':', reference(variables('CosmosDbName')).outputs.PrimaryMasterKey.value,'@', variables('CosmosDbName'), '.documents.azure.com:10255/?ssl=true&replicaSet=globaldb')]",
					"type": "Custom"
				  },
				  {
					"name": "QueueStorage",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  },
				  {
					"name": "TableStorage",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  },
				  {
					"name": "CommunicationsStorage",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  }
				]
			  }
			},
			"customHostName": {
			  "value": "[parameters('QAAppCustomHostname')]"
			},
			"certificateThumbprint": {
			  "value": "[if(greater(length(parameters('EmployerCustomHostname')), 0), reference('QA-App-AppService-Certificate', '2018-11-01').outputs.certificateThumbprint.value, '')]"
			},
			"ipSecurityRestrictions": {
			  "value": "[parameters('appServiceAllowedIps')]"
			}
		  }
		},
		"dependsOn": [
		  "[variables('QAAppServiceName')]",
		  "QA-App-AppService-Certificate"
		]
	  },
	  {
		"condition": "[greater(length(parameters('ProviderKeyvaultCertificateName')), 0)]",
		"apiVersion": "2017-05-10",
		"name": "Provider-Recruit-AppService-Certificate",
		"resourceGroup": "[parameters('sharedAppServicePlanResourceGroup')]",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"keyVaultCertificateName": {
			  "value": "[parameters('ProviderKeyvaultCertificateName')]"
			},
			"keyVaultName": {
			  "value": "[parameters('sharedKeyvaultName')]"
			},
			"keyVaultResourceGroup": {
			  "value": "[parameters('sharedKeyvaultResourceGroup')]"
			},
			"serverFarmId": {
			  "value": "[resourceId(parameters('sharedAppServicePlanResourceGroup'), 'Microsoft.Web/serverfarms', parameters('sharedFrontendAppServicePlanName'))]"
			}
		  }
		}
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "Provider-Recruit-AppService",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"appServiceName": {
			  "value": "[variables('ProviderRecruitAppServiceName')]"
			},
			"appServicePlanName": {
			  "value": "[parameters('SharedFrontendAppServicePlanName')]"
			},
			"appServicePlanResourceGroup": {
			  "value": "[parameters('SharedAppServicePlanResourceGroup')]"
			},
			"appServiceAppSettings": {
			  "value": {
				"array": [
				  {
					"name": "Authentication:WtRealm",
					"value": "[parameters('ProviderAuthentication').WtRealm]"
				  },
				  {
					"name": "Authentication:MetaDataAddress",
					"value": "[parameters('ProviderAuthentication').MetaDataAddress]"
				  },
				  {
					"name": "Slack:WebhookUrl",
					"value": "[parameters('SlackWebhook')]"
				  },
				  {
					"name": "ApplicationInsights:InstrumentationKey",
					"value": "[reference(variables('ProviderRecruitAppServiceName')).outputs.InstrumentationKey.value]"
				  },
				  {
					"name": "Slack:FindAnApprenticeshipDetailPrefixUrl",
					"value": "[parameters('FindAnApprenticeshipDetailPrefixUrl')]"
				  },
				  {
					"name": "ExternalLinks:ProviderApprenticeshipSiteUrl",
					"value": "[parameters('ExternalLinks').ProviderApprenticeshipSiteUrl]"
				  },
				  {
					"name": "ExternalLinks:CommitmentsSiteUrl",
					"value": "[parameters('ExternalLinks').ProviderCommitmentsSiteUrl]"
				  },
				  {
					"name": "ExternalLinks:ReservationsSiteUrl",
					"value": "[parameters('ExternalLinks').ReservationsSiteUrl]"
				  },
				  {
					"name": "Features:SetNotificationPreferences",
					"value": "[parameters('Features').SetNotificationPreferences]"
				  },
				  {
					"name": "ExternalLinks:SignProviderAgreementUrl",
					"value": "[parameters('ExternalLinks').SignProviderAgreementUrl]"
				  },
				  {
					"name": "ASPNETCORE_ENVIRONMENT",
					"value": "[toUpper(parameters('EnvironmentFullName'))]"
				  },
				  {
					"name": "GoogleMapsPrivateKey",
					"value": "[parameters('GoogleMapsPrivateKey')]"
				  },
				  {
					"name": "PostcodeAnywhere:Key",
					"value": "[parameters('PostcodeAnywhereKey')]"
				  },
				  {
					"name": "ZenDesk:SnippetSectionId",
					"value": "[parameters('ZenDesk').ProviderSnippetSectionId]"
				  },
				  {
					"name": "ZenDesk:SnippetKey",
					"value": "[parameters('ZenDesk').SnippetKey]"
				  },
				  {
					"name": "ZenDesk:CobrowsingSnippetKey",
					"value": "[parameters('ZenDesk').CobrowsingSnippetKey]"
				  },
				  {
					"name": "UseTableStorageQueryStore",
					"value": "[parameters('UseTableStorageQueryStore')]"
				  },
				  {
					"name": "FaaConfiguration:StorageConnectionString",
					"value": "[parameters('FaaConfiguration').StorageConnectionString]"
				  },
				  {
					"name": "AccountApiConfiguration:ApiBaseUrl",
					"value": "[parameters('AccountApiConfiguration').ApiBaseUrl]"
				  },
				  {
					"name": "AccountApiConfiguration:ClientId",
					"value": "[parameters('AccountApiConfiguration').ClientId]"
				  },
				  {
					"name": "AccountApiConfiguration:ClientSecret",
					"value": "[parameters('AccountApiConfiguration').ClientSecret]"
				  },
				  {
					"name": "AccountApiConfiguration:IdentifierUri",
					"value": "[parameters('AccountApiConfiguration').IdentifierUri]"
				  },
				  {
					"name": "AccountApiConfiguration:Tenant",
					"value": "[parameters('AccountApiConfiguration').Tenant]"
				  },
				  {
					"name": "PasAccountApiConfiguration:ApiBaseUrl",
					"value": "[parameters('PasAccountApiConfiguration').ApiBaseUrl]"
				  },
				  {
					"name": "PasAccountApiConfiguration:ClientId",
					"value": "[parameters('PasAccountApiConfiguration').ClientId]"
				  },
				  {
					"name": "PasAccountApiConfiguration:ClientSecret",
					"value": "[parameters('PasAccountApiConfiguration').ClientSecret]"
				  },
				  {
					"name": "PasAccountApiConfiguration:IdentifierUri",
					"value": "[parameters('PasAccountApiConfiguration').IdentifierUri]"
				  },
				  {
					"name": "PasAccountApiConfiguration:Tenant",
					"value": "[parameters('PasAccountApiConfiguration').Tenant]"
				  },
				  {
					"name": "ProviderRelationshipsApiConfiguration:ApiBaseUrl",
					"value": "[parameters('ProviderRelationshipsApiConfiguration').ApiBaseUrl]"
				  },
				  {
					"name": "ProviderRelationshipsApiConfiguration:ClientId",
					"value": "[parameters('ProviderRelationshipsApiConfiguration').ClientId]"
				  },
				  {
					"name": "ProviderRelationshipsApiConfiguration:ClientSecret",
					"value": "[parameters('ProviderRelationshipsApiConfiguration').ClientSecret]"
				  },
				  {
					"name": "ProviderRelationshipsApiConfiguration:IdentifierUri",
					"value": "[parameters('ProviderRelationshipsApiConfiguration').IdentifierUri]"
				  },
				  {
					"name": "ProviderRelationshipsApiConfiguration:Tenant",
					"value": "[parameters('ProviderRelationshipsApiConfiguration').Tenant]"
				  },
				  {
					"name": "RedisConnectionSettings:RedisConnectionString",
					"value": "[parameters('StorageRedisConnectionString')]"
				  },
				  {
					"name": "RedisConnectionSettings:DataProtectionKeysDatabase",
					"value": "[parameters('DataProtectionKeysDatabase')]"
				  }
				]
			  }
			},
			"appServiceConnectionStrings": {
			  "value": {
				"array": [
				  {
					"name": "Redis",
					"connectionString": "[parameters('LoggingRedisConnectionString')]",
					"type": "Custom"
				  },
				  {
					"name": "MongoDb",
					"connectionString": "[concat('mongodb://', variables('CosmosDbName'), ':', reference(variables('CosmosDbName')).outputs.PrimaryMasterKey.value,'@', variables('CosmosDbName'), '.documents.azure.com:10255/?ssl=true&replicaSet=globaldb')]",
					"type": "Custom"
				  },
				  {
					"name": "QueueStorage",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  },
				  {
					"name": "TableStorage",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  }
				]
			  }
			},
			"customHostName": {
			  "value": "[parameters('ProviderCustomHostname')]"
			},
			"certificateThumbprint": {
			  "value": "[if(greater(length(parameters('EmployerCustomHostname')), 0), reference('Provider-Recruit-AppService-Certificate', '2018-11-01').outputs.certificateThumbprint.value, '')]"
			},
			"ipSecurityRestrictions": {
			  "value": "[parameters('appServiceAllowedIps')]"
			}
		  }
		},
		"dependsOn": [
		  "[variables('CosmosDbName')]",
		  "Provider-Recruit-AppService-Certificate"
		]
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "[variables('StorageAccountName')]",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"storageAccountName": {
			  "value": "[variables('StorageAccountName')]"
			}
		  }
		},
		"dependsOn": []
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "[variables('webJobAppServicePlanName')]",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"appServicePlanName": {
			  "value": "[variables('webJobAppServicePlanName')]"
			},
			"aspLocation": {
			  "value": "[parameters('webJobAspLocation')]"
			},
			"aspSize": {
			  "value": "[parameters('webJobAspSize')]"
			},
			"aspInstances": {
			  "value": "[parameters('webJobAspInstances')]"
			},
			"nonASETier": {
			  "value": "[parameters('webJobNonASETier')]"
			}
		  }
		},
		"dependsOn": []
	  },
	  {
		"apiVersion": "2020-06-01",
		"name": "webjob-apim-product-subscription",
		"resourceGroup": "[parameters('sharedApimResourceGroup')]",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'apim/apim-subscription.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"apimName": {
			  "value": "[parameters('sharedApimName')]"
			},
			"subscriptionName": {
			  "value": "[variables('WebJobAppServiceName')]"
			},
			"subscriptionScope": {
			  "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('sharedApimResourceGroup'), '/providers/Microsoft.ApiManagement/service/', parameters('sharedApimName'), '/products/RecruitOuterApi')]"
			}
		  }
		}
	  },
	  {
		"apiVersion": "2017-05-10",
		"name": "[variables('WebJobAppServiceName')]",
		"type": "Microsoft.Resources/deployments",
		"properties": {
		  "mode": "Incremental",
		  "templateLink": {
			"uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
			"contentVersion": "1.0.0.0"
		  },
		  "parameters": {
			"appServiceName": {
			  "value": "[variables('WebJobAppServiceName')]"
			},
			"appServicePlanName": {
			  "value": "[variables('webJobAppServicePlanName')]"
			},
			"appServicePlanResourceGroup": {
			  "value": "[resourceGroup().name]"
			},
			"appServiceAppSettings": {
			  "value": {
				"array": [
				  {
					"name": "ASPNETCORE_ENVIRONMENT",
					"value": "[toUpper(parameters('EnvironmentFullName'))]"
				  },
				  {
					"name": "ApprenticeshipProgrammesApiBaseUrl",
					"value": "[parameters('ApprenticeshipProgrammesApiBaseUrl')]"
				  },
				  {
					"name": "AccountApiConfiguration:ApiBaseUrl",
					"value": "[parameters('AccountApiConfiguration').ApiBaseUrl]"
				  },
				  {
					"name": "AccountApiConfiguration:ClientId",
					"value": "[parameters('AccountApiConfiguration').ClientId]"
				  },
				  {
					"name": "AccountApiConfiguration:ClientSecret",
					"value": "[parameters('AccountApiConfiguration').ClientSecret]"
				  },
				  {
					"name": "AccountApiConfiguration:IdentifierUri",
					"value": "[parameters('AccountApiConfiguration').IdentifierUri]"
				  },
				  {
					"name": "AccountApiConfiguration:Tenant",
					"value": "[parameters('AccountApiConfiguration').Tenant]"
				  },
				  {
					"name": "ProviderRelationshipsApiConfiguration:ApiBaseUrl",
					"value": "[parameters('ProviderRelationshipsApiConfiguration').ApiBaseUrl]"
				  },
				  {
					"name": "ProviderRelationshipsApiConfiguration:ClientId",
					"value": "[parameters('ProviderRelationshipsApiConfiguration').ClientId]"
				  },
				  {
					"name": "ProviderRelationshipsApiConfiguration:ClientSecret",
					"value": "[parameters('ProviderRelationshipsApiConfiguration').ClientSecret]"
				  },
				  {
					"name": "ProviderRelationshipsApiConfiguration:IdentifierUri",
					"value": "[parameters('ProviderRelationshipsApiConfiguration').IdentifierUri]"
				  },
				  {
					"name": "ProviderRelationshipsApiConfiguration:Tenant",
					"value": "[parameters('ProviderRelationshipsApiConfiguration').Tenant]"
				  },
				  {
					"name": "VacancyApiConfiguration:ApiSearchBaseUrl",
					"value": "[parameters('VacancyApiConfiguration').ApiSearchBaseUrl]"
				  },
				  {
					"name": "VacancyApiConfiguration:ApiReadSubscriptionKey",
					"value": "[parameters('VacancyApiConfiguration').ApiReadSubscriptionKey]"
				  },
				  {
					"name": "Slack:WebhookUrl",
					"value": "[parameters('SlackWebhook')]"
				  },
				  {
					"name": "Slack:FindAnApprenticeshipDetailPrefixUrl",
					"value": "[parameters('FindAnApprenticeshipDetailPrefixUrl')]"
				  },
				  {
					"name": "FaaConfiguration:StorageConnectionString",
					"value": "[parameters('FaaConfiguration').StorageConnectionString]"
				  },
				  {
					"name": "Geocode:PostcodeAnywhereKey",
					"value": "[parameters('GeocodePostcodeAnywhereKey')]"
				  },
				  {
					"name": "DasSharedNServiceBusConfiguration:ConnectionString",
					"value": "[parameters('DasSharedNServiceBusConfiguration').ConnectionString]"
				  },
				  {
					"name": "DasSharedNServiceBusConfiguration:NServiceBusLicense",
					"value": "[parameters('DasSharedNServiceBusConfiguration').NServiceBusLicense]"
				  },
				  {
					"name": "CommunicationsConfiguration:EmployersApprenticeshipServiceUrl",
					"value": "[parameters('CommunicationsConfiguration').EmployersApprenticeshipServiceUrl]"
				  },
				  {
					"name": "CommunicationsConfiguration:ProvidersApprenticeshipServiceUrl",
					"value": "[parameters('CommunicationsConfiguration').ProvidersApprenticeshipServiceUrl]"
				  },
				  {
					"name": "NotificationsApiClientConfiguration:ApiBaseUrl",
					"value": "[parameters('NotificationsApiClientConfiguration').ApiBaseUrl]"
				  },
				  {
					"name": "NotificationsApiClientConfiguration:ClientToken",
					"value": "[parameters('NotificationsApiClientConfiguration').ClientToken]"
				  },
				  {
					"name": "PasAccountApiConfiguration:ApiBaseUrl",
					"value": "[parameters('PasAccountApiConfiguration').ApiBaseUrl]"
				  },
				  {
					"name": "PasAccountApiConfiguration:ClientId",
					"value": "[parameters('PasAccountApiConfiguration').ClientId]"
				  },
				  {
					"name": "PasAccountApiConfiguration:ClientSecret",
					"value": "[parameters('PasAccountApiConfiguration').ClientSecret]"
				  },
				  {
					"name": "PasAccountApiConfiguration:IdentifierUri",
					"value": "[parameters('PasAccountApiConfiguration').IdentifierUri]"
				  },
				  {
					"name": "PasAccountApiConfiguration:Tenant",
					"value": "[parameters('PasAccountApiConfiguration').Tenant]"
				  },
				  {
					"name": "Encodings",
					"value": "[parameters('DasEncodings')]"
				  },
				  {
					"name": "OuterApiConfiguration:BaseUrl",
					"value": "[parameters('recruitOuterApiConfigurationBaseUrl')]"
				  },
				  {
					"name": "OuterApiConfiguration:Key",
					"value": "[reference(resourceId(parameters('sharedApimResourceGroup'),'Microsoft.ApiManagement/service/subscriptions', parameters('sharedApimName'), variables('WebJobAppServiceName')), '2019-01-01').primaryKey]"
				  }
				]
			  }
			},
			"appServiceConnectionStrings": {
			  "value": {
				"array": [
				  {
					"name": "ConfigurationStorageConnectionString",
					"connectionString": "[parameters('ConfigurationStorageConnectionString')]",
					"type": "Custom"
				  },
				  {
					"name": "Redis",
					"connectionString": "[parameters('LoggingRedisConnectionString')]",
					"type": "Custom"
				  },
				  {
					"name": "MongoDb",
					"connectionString": "[concat('mongodb://', variables('CosmosDbName'), ':', reference(variables('CosmosDbName')).outputs.PrimaryMasterKey.value,'@', variables('CosmosDbName'), '.documents.azure.com:10255/?ssl=true&replicaSet=globaldb')]",
					"type": "Custom"
				  },
				  {
					"name": "QueueStorage",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  },
				  {
					"name": "CommunicationsStorage",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  },
				  {
					"name": "AzureWebJobsDashboard",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  },
				  {
					"name": "AzureWebJobsStorage",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  },
				  {
					"name": "EmployerAccountsSqlDbConnectionString",
					"connectionString": "[parameters('EmployerAccountsSqlDbConnectionString')]",
					"type": "Custom"
				  },
				  {
					"name": "EmployerFinanceSqlDbConnectionString",
					"connectionString": "[parameters('EmployerFinanceSqlDbConnectionString')]",
					"type": "Custom"
				  },
				  {
					"name": "VacancyAnalyticEventsSqlDbConnectionString",
					"connectionString": "[parameters('VacancyAnalyticEventsSqlDbConnectionString')]",
					"type": "Custom"
				  },
				  {
					"name": "TableStorage",
					"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'),';AccountKey=',reference(variables('StorageAccountName')).outputs.storageKey.value)]",
					"type": "Custom"
				  }
				]
			  }
			},
			"deployStagingSlot": {
			  "value": false
			},
			"appServiceVirtualApplications": {
			  "value": [
				{
				  "virtualPath": "/",
				  "physicalPath": "site\\wwwroot",
				  "preloadEnabled": true
				},
				{
				  "virtualPath": "/Recruit.Vacancies.Jobs",
				  "physicalPath": "site\\wwwroot\\app_data\\jobs\\continuous\\Recruit.Vacancies.Jobs",
				  "preloadEnabled": false
				}
			  ]
			}
		  }
		},
		"dependsOn": [
		  "[variables('StorageAccountName')]",
		  "[variables('webJobAppServicePlanName')]",
		  "[variables('CosmosDbName')]",
		  "webjob-apim-product-subscription"
		]
	  }
	],
	"outputs": {}
  }
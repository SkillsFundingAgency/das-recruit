{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceEnvironmentName": {
      "type": "string"
    },
    "serviceName": {
      "type": "string"
    },
    "tags": {
      "type": "object"
    },
    "resourceGroupLocation": {
      "type": "string"
    },
    "jobsAspSize": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3"
      ],
      "defaultValue": "1"
    },
    "jobsAspInstances": {
      "type": "int",
      "defaultValue": 1
    },
    "jobsAspTier": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "environmentName": {
      "type": "string"
    },
    "ConfigurationStorageConnectionString": {
      "type": "securestring"
    },
    "LoggingRedisConnectionString": {
      "type": "securestring"
    },
    "sharedFrontEndAppServicePlanName": {
      "type": "string"
    },
    "sharedFrontEndSubnetResourceId": {
      "type": "string"
    },
    "sharedEnvResourceGroup": {
      "type": "string"
    },
    "employerCustomHostname": {
      "type": "string"
    },
    "employerKeyvaultCertificateName": {
      "type": "string"
    },
    "qaAppCustomHostname": {
      "type": "string"
    },
    "qaAppKeyvaultCertificateName": {
      "type": "string"
    },
    "providerCustomHostname": {
      "type": "string"
    },
    "providerKeyvaultCertificateName": {
      "type": "string"
    },
    "cosmosDbSubnetResourceIdList": {
      "type": "array",
      "defaultValue": []
    },
    "cosmosDbIpRangeFilter": {
      "type": "string",
      "defaultValue": ""
    },
    "cosmosDbName": {
      "type": "string"
    },
    "cosmosDatabase": {
      "type": "string"
    },
    "containerArray": {
      "type": "array"
    },
    "sharedKeyvaultName": {
      "type": "string"
    },
    "sharedManagementResourceGroup": {
      "type": "string"
    },
    "frontEndAccessRestrictions": {
      "type": "array"
    },
    "workerAccessRestrictions": {
      "type": "array"
    },
    "sharedApimResourceGroup": {
      "type": "string"
    },
    "sharedApimName": {
      "type": "string"
    },
    "cosmosDbServerVersion": {
      "type": "string"
    },
    "sharedEnvVirtualNetworkName": {
      "type": "string"
    },
    "webjobSubnetObject": {
      "type": "object"
    },
    "subnetServiceEndpointList": {
      "type": "array"
    },
    "subnetDelegations": {
      "type": "array"
    },
    "sharedServiceBusName": {
      "type": "string"
    },
    "apiCustomHostname": {
      "type": "string"
    },
    "apiKeyvaultCertificateName": {
      "type": "string"
    },
    "wafOutboundIPAddresses": {
      "type": "array"
    },
    "sharedBackEndAppServicePlanName": {
      "type": "string"
    },
    "sharedBackEndSubnetResourceId": {
      "type": "string"
    },
    "sharedSQLServerName": {
      "type": "string"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string"
    },
    "cdnUrl": {
      "type": "string"
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
    "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
    "resourceGroupName": "[concat(variables('resourceNamePrefix'),'-rg')]",
    "webJobAppServicePlanName": "[concat(variables('resourceNamePrefix'),'-webjob-asp')]",
    "employerRecruitAppServiceName": "[concat(variables('resourceNamePrefix'), '-as')]",
    "providerRecruitAppServiceName": "[concat(variables('resourceNamePrefix'), '-pr-as')]",
    "qaAppServiceName": "[concat(variables('resourceNamePrefix'), '-qa-as')]",
    "webjobAppServiceName": "[concat(variables('resourceNamePrefix'), '-webjob-as')]",
    "storageAccountName": "[toLower(concat('das', parameters('resourceEnvironmentName'), parameters('serviceName'), 'str'))]",
    "apiAppServiceName": "[concat(variables('resourceNamePrefix'), 'api-as')]",
    "apiConfigNames": "SFA.DAS.Recruit.Api",
    "jobsConfigNames": "SFA.DAS.Recruit.Jobs,SFA.DAS.Encoding"
  },
  "resources": [
    {
      "apiVersion": "2021-04-01",
      "name": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/resourceGroups",
      "location": "[parameters('resourceGroupLocation')]",
      "tags": "[parameters('tags')]",
      "properties": {}
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('employerRecruitAppServiceName'), '-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('employerRecruitAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('employerRecruitAppServiceName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('qaAppServiceName'), '-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('qaAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('qaAppServiceName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('providerRecruitAppServiceName'), '-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('providerRecruitAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('providerRecruitAppServiceName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('webjobAppServiceName'), '-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('webjobAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('webjobAppServiceName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(parameters('cosmosDbName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'cosmos-db.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cosmosDbName": {
            "value": "[parameters('cosmosDbName')]"
          },
          "cosmosDbType": {
            "value": "MongoDB"
          },
          "defaultConsistencyLevel": {
            "value": "Strong"
          },
          "subnetResourceIdList": {
            "value": "[parameters('cosmosDbSubnetResourceIdList')]"
          },
          "ipRangeFilter": {
            "value": "[parameters('cosmosDbIpRangeFilter')]"
          },
          "serverVersion": {
            "value": "[parameters('cosmosDbServerVersion')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "logAnalyticsWorkspaceResourceGroupName": {
            "value": "[parameters('sharedManagementResourceGroup')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(parameters('cosmosDbName'), '-database-', parameters('utcValue'))]",
      "dependsOn": [
        "[concat(parameters('cosmosDbName'), '-', parameters('utcValue'))]"
      ],
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'cosmos-db-database.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cosmosDbAccountName": {
            "value": "[parameters('cosmosDbName')]"
          },
          "cosmosDatabase": {
            "value": "[parameters('cosmosDatabase')]"
          },
          "cosmosDBType": {
            "value": "MongoDB"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(parameters('cosmosDbName'), '-', parameters('containerArray')[copyIndex()].containerName,'-', parameters('utcValue'))]",
      "dependsOn": [
        "[concat(parameters('cosmosDbName'), '-database-', parameters('utcValue'))]"
      ],
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "condition": "[greater(length(parameters('containerArray')), 0)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'cosmos-db-container.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cosmosDbAccountName": {
            "value": "[parameters('cosmosDbName')]"
          },
          "cosmosDatabase": {
            "value": "[parameters('cosmosDatabase')]"
          },
          "cosmosDBType": {
            "value": "MongoDB"
          },
          "containerName": {
            "value": "[parameters('containerArray')[copyIndex()].containerName]"
          },
          "partitionKey": {
            "value": "[parameters('containerArray')[copyIndex()].partitionKey]"
          }
        }
      },
      "copy": {
        "name": "containercopy",
        "count": "[length(parameters('containerArray'))]"
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(parameters('cosmosDbName'), '-settings-', parameters('containerArray')[copyIndex()].containerName, '-', parameters('utcValue'))]",
      "dependsOn": [
        "[concat(parameters('cosmosDbName'), '-', parameters('containerArray')[copyIndex()].containerName,'-', parameters('utcValue'))]"
      ],
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "condition": "[greater(length(parameters('containerArray')), 0)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'cosmos-db-container-settings.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cosmosDbAccountName": {
            "value": "[parameters('cosmosDbName')]"
          },
          "cosmosDatabase": {
            "value": "[parameters('cosmosDatabase')]"
          },
          "cosmosDBType": {
            "value": "MongoDB"
          },
          "containerName": {
            "value": "[parameters('containerArray')[copyIndex()].containerName]"
          },
          "throughput": {
            "value": "[parameters('containerArray')[copyIndex()].throughput]"
          },
          "maxThroughput": {
            "value": "[parameters('containerArray')[copyIndex()].maxThroughput]"
          }
        }
      },
      "copy": {
        "name": "containercopy",
        "count": "[length(parameters('containerArray'))]"
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('employerRecruitAppServiceName'), '-certificate-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('EmployerKeyvaultCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('sharedKeyvaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedManagementResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('employerRecruitAppServiceName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('employerRecruitAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('sharedFrontEndAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('sharedEnvResourceGroup')]"
          },
          "subnetResourceId": {
            "value": "[parameters('sharedFrontEndSubnetResourceId')]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(concat(variables('employerRecruitAppServiceName'), '-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                },
                {
                  "name": "Environment",
                  "value": "[toUpper(parameters('environmentName'))]"
                },
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "Cdn:Url",
                  "value": "[parameters('cdnUrl')]"
                }
              ]
            }
          },
          "customHostName": {
            "value": "[parameters('EmployerCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference(concat(variables('employerRecruitAppServiceName'), '-certificate-', parameters('utcValue'))).outputs.certificateThumbprint.value]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('frontEndAccessRestrictions')]"
          }
        }
      }
    },
    {
      "condition": "[greater(length(parameters('QAAppCustomHostname')), 0)]",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('qaAppServiceName'), '-certificate-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('QAAppKeyvaultCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('sharedKeyvaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedManagementResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('qaAppServiceName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('qaAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('sharedFrontEndAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('sharedEnvResourceGroup')]"
          },
          "subnetResourceId": {
            "value": "[parameters('sharedFrontEndSubnetResourceId')]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(concat(variables('qaAppServiceName'), '-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                },
                {
                  "name": "Environment",
                  "value": "[toUpper(parameters('environmentName'))]"
                },
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "Cdn:Url",
                  "value": "[parameters('cdnUrl')]"
                }
              ]
            }
          },
          "customHostName": {
            "value": "[parameters('QAAppCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference(concat(variables('qaAppServiceName'), '-certificate-', parameters('utcValue'))).outputs.certificateThumbprint.value]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('frontEndAccessRestrictions')]"
          }
        }
      }
    },
    {
      "condition": "[greater(length(parameters('ProviderKeyvaultCertificateName')), 0)]",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('providerRecruitAppServiceName'), '-certificate-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('ProviderKeyvaultCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('sharedKeyvaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedManagementResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('providerRecruitAppServiceName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('providerRecruitAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('sharedFrontEndAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('sharedEnvResourceGroup')]"
          },
          "subnetResourceId": {
            "value": "[parameters('sharedFrontEndSubnetResourceId')]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(concat(variables('providerRecruitAppServiceName'), '-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                },
                {
                  "name": "Environment",
                  "value": "[toUpper(parameters('environmentName'))]"
                },
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "Cdn:Url",
                  "value": "[parameters('cdnUrl')]"
                }
              ]
            }
          },
          "customHostName": {
            "value": "[parameters('ProviderCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference(concat(variables('providerRecruitAppServiceName'), '-certificate-', parameters('utcValue'))).outputs.certificateThumbprint.value]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('frontEndAccessRestrictions')]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('storageAccountName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "allowSharedKeyAccess": {
            "value": true
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('webJobAppServicePlanName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('webJobAppServicePlanName')]"
          },
          "aspSize": {
            "value": "[parameters('jobsAspSize')]"
          },
          "aspInstances": {
            "value": "[parameters('jobsAspInstances')]"
          },
          "nonASETier": {
            "value": "[parameters('jobsAspTier')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[concat(parameters('webjobSubnetObject').name, '-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'subnet.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('sharedEnvVirtualNetworkName')]"
          },
          "subnetName": {
            "value": "[parameters('webjobSubnetObject').name]"
          },
          "subnetAddressPrefix": {
            "value": "[parameters('webjobSubnetObject').addressSpace]"
          },
          "serviceEndpointList": {
            "value": "[parameters('subnetServiceEndpointList')]"
          },
          "delegations": {
            "value": "[parameters('subnetDelegations')]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(parameters('webjobSubnetObject').name, '-sql-firewall-rule-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'sql-server-firewall-rules.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serverName": {
            "value": "[parameters('sharedSQLServerName')]"
          },
          "subnetResourceIdList": {
            "value": "[createArray(reference(concat(parameters('webjobSubnetObject').name, '-', parameters('utcValue'))).outputs.SubnetResourceId.value)]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('webjobAppServiceName'), '-apim-subscription-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedApimResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'apim/apim-subscription.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apimName": {
            "value": "[parameters('sharedApimName')]"
          },
          "subscriptionName": {
            "value": "[variables('webjobAppServiceName')]"
          },
          "subscriptionScope": {
            "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('sharedApimResourceGroup'), '/providers/Microsoft.ApiManagement/service/', parameters('sharedApimName'), '/products/RecruitOuterApi')]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('webjobAppServiceName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('webjobAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[variables('webJobAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[variables('resourcegroupName')]"
          },
          "subnetResourceId": {
            "value": "[reference(concat(parameters('webjobSubnetObject').name, '-', parameters('utcValue'))).outputs.subnetResourceId.value]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "Environment",
                  "value": "[toUpper(parameters('environmentName'))]"
                },
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "ConfigNames",
                  "value": "[variables('jobsConfigNames')]"
                },
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(concat(variables('webjobAppServiceName'), '-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                }
              ]
            }
          },
          "deployStagingSlot": {
            "value": false
          },
          "appServiceVirtualApplications": {
            "value": [
              {
                "virtualPath": "/",
                "physicalPath": "site\\wwwroot",
                "preloadEnabled": true
              },
              {
                "virtualPath": "/Recruit.Vacancies.Jobs",
                "physicalPath": "site\\wwwroot\\app_data\\jobs\\continuous\\Recruit.Vacancies.Jobs",
                "preloadEnabled": false
              }
            ]
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('workerAccessRestrictions')]"
          }
        }
      },
      "dependsOn": [
        "[concat(variables('webjobAppServicePlanName'), '-', parameters('utcValue'))]",
        "[concat(variables('webjobAppServiceName'), '-apim-subscription-', parameters('utcValue'))]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('webjobAppServiceName'), '-role-assignments-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'role-assignments/role-assignment-service-bus.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "principalId": {
            "value": "[reference(concat(variables('webjobAppServiceName'), '-', parameters('utcValue'))).outputs.managedServiceIdentityId.value]"
          },
          "assignmentType": {
            "value": "ServiceBusOwner"
          },
          "resourceName": {
            "value": "[parameters('sharedServiceBusName')]"
          }
        }
      }
    },
    /// API Resources
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('apiAppServiceName'), '-certificate-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('apiKeyvaultCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('sharedKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedManagementResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('apiAppServiceName'), '-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('apiAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('apiAppServiceName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('apiAppServiceName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('apiAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('sharedBackEndAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('sharedEnvResourceGroup')]"
          },
          "subnetResourceId": {
            "value": "[parameters('sharedBackEndSubnetResourceId')]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(concat(variables('apiAppServiceName'), '-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                },
                {
                  "name": "Environment",
                  "value": "[toUpper(parameters('environmentName'))]"
                },
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "ConfigNames",
                  "value": "[variables('apiConfigNames')]"
                }
              ]
            }
          },
          "customHostName": {
            "value": "[parameters('apiCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference(concat(variables('apiAppServiceName'), '-certificate-', parameters('utcValue'))).outputs.certificateThumbprint.value]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('wafOutboundIPAddresses')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    }
    /// End
  ],
  "outputs": {
    "ResourceGroupName": {
      "type": "string",
      "value": "[variables('resourceGroupName')]"
    },
    "EmployerAppServiceName": {
      "type": "string",
      "value": "[variables('employerRecruitAppServiceName')]"
    },
    "ProviderAppServiceName": {
      "type": "string",
      "value": "[variables('providerRecruitAppServiceName')]"
    },
    "QAAppServiceName": {
      "type": "string",
      "value": "[variables('qaAppServiceName')]"
    },
    "JobsAppServiceName": {
      "type": "string",
      "value": "[variables('webjobAppServiceName')]"
    },
    "ApiAppServiceName": {
      "type": "string",
      "value": "[variables('apiAppServiceName')]"
    },
    "StorageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    }
  }
}
